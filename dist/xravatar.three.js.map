{"version":3,"file":"xravatar.three.js","sources":["../node_modules/comlink/dist/esm/comlink.mjs","../node_modules/lzma/src/lzma-d.js","../lib/xravatar.js","../lib/xravatarLoader.js","../lib/xravatar.three.js"],"sourcesContent":["/**\r\n * Copyright 2019 Google Inc. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst proxyMarker = Symbol(\"Comlink.proxy\");\r\nconst createEndpoint = Symbol(\"Comlink.endpoint\");\r\nconst releaseProxy = Symbol(\"Comlink.releaseProxy\");\r\nconst throwSet = new WeakSet();\r\nconst transferHandlers = new Map([\r\n    [\r\n        \"proxy\",\r\n        {\r\n            canHandle: obj => obj && obj[proxyMarker],\r\n            serialize(obj) {\r\n                const { port1, port2 } = new MessageChannel();\r\n                expose(obj, port1);\r\n                return [port2, [port2]];\r\n            },\r\n            deserialize: (port) => {\r\n                port.start();\r\n                return wrap(port);\r\n            }\r\n        }\r\n    ],\r\n    [\r\n        \"throw\",\r\n        {\r\n            canHandle: obj => throwSet.has(obj),\r\n            serialize(obj) {\r\n                const isError = obj instanceof Error;\r\n                let serialized = obj;\r\n                if (isError) {\r\n                    serialized = {\r\n                        isError,\r\n                        message: obj.message,\r\n                        stack: obj.stack\r\n                    };\r\n                }\r\n                return [serialized, []];\r\n            },\r\n            deserialize(obj) {\r\n                if (obj.isError) {\r\n                    throw Object.assign(new Error(), obj);\r\n                }\r\n                throw obj;\r\n            }\r\n        }\r\n    ]\r\n]);\r\nfunction expose(obj, ep = self) {\r\n    ep.addEventListener(\"message\", function callback(ev) {\r\n        if (!ev || !ev.data) {\r\n            return;\r\n        }\r\n        const { id, type, path } = Object.assign({ path: [] }, ev.data);\r\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\r\n        let returnValue;\r\n        try {\r\n            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\r\n            const rawValue = path.reduce((obj, prop) => obj[prop], obj);\r\n            switch (type) {\r\n                case 0 /* GET */:\r\n                    {\r\n                        returnValue = rawValue;\r\n                    }\r\n                    break;\r\n                case 1 /* SET */:\r\n                    {\r\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\r\n                        returnValue = true;\r\n                    }\r\n                    break;\r\n                case 2 /* APPLY */:\r\n                    {\r\n                        returnValue = rawValue.apply(parent, argumentList);\r\n                    }\r\n                    break;\r\n                case 3 /* CONSTRUCT */:\r\n                    {\r\n                        const value = new rawValue(...argumentList);\r\n                        returnValue = proxy(value);\r\n                    }\r\n                    break;\r\n                case 4 /* ENDPOINT */:\r\n                    {\r\n                        const { port1, port2 } = new MessageChannel();\r\n                        expose(obj, port2);\r\n                        returnValue = transfer(port1, [port1]);\r\n                    }\r\n                    break;\r\n                case 5 /* RELEASE */:\r\n                    {\r\n                        returnValue = undefined;\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        catch (e) {\r\n            returnValue = e;\r\n            throwSet.add(e);\r\n        }\r\n        Promise.resolve(returnValue)\r\n            .catch(e => {\r\n            throwSet.add(e);\r\n            return e;\r\n        })\r\n            .then(returnValue => {\r\n            const [wireValue, transferables] = toWireValue(returnValue);\r\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\r\n            if (type === 5 /* RELEASE */) {\r\n                // detach and deactive after sending release response above.\r\n                ep.removeEventListener(\"message\", callback);\r\n                closeEndPoint(ep);\r\n            }\r\n        });\r\n    });\r\n    if (ep.start) {\r\n        ep.start();\r\n    }\r\n}\r\nfunction isMessagePort(endpoint) {\r\n    return endpoint.constructor.name === \"MessagePort\";\r\n}\r\nfunction closeEndPoint(endpoint) {\r\n    if (isMessagePort(endpoint))\r\n        endpoint.close();\r\n}\r\nfunction wrap(ep, target) {\r\n    return createProxy(ep, [], target);\r\n}\r\nfunction throwIfProxyReleased(isReleased) {\r\n    if (isReleased) {\r\n        throw new Error(\"Proxy has been released and is not useable\");\r\n    }\r\n}\r\nfunction createProxy(ep, path = [], target = function () { }) {\r\n    let isProxyReleased = false;\r\n    const proxy = new Proxy(target, {\r\n        get(_target, prop) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            if (prop === releaseProxy) {\r\n                return () => {\r\n                    return requestResponseMessage(ep, {\r\n                        type: 5 /* RELEASE */,\r\n                        path: path.map(p => p.toString())\r\n                    }).then(() => {\r\n                        closeEndPoint(ep);\r\n                        isProxyReleased = true;\r\n                    });\r\n                };\r\n            }\r\n            if (prop === \"then\") {\r\n                if (path.length === 0) {\r\n                    return { then: () => proxy };\r\n                }\r\n                const r = requestResponseMessage(ep, {\r\n                    type: 0 /* GET */,\r\n                    path: path.map(p => p.toString())\r\n                }).then(fromWireValue);\r\n                return r.then.bind(r);\r\n            }\r\n            return createProxy(ep, [...path, prop]);\r\n        },\r\n        set(_target, prop, rawValue) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\r\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\r\n            const [value, transferables] = toWireValue(rawValue);\r\n            return requestResponseMessage(ep, {\r\n                type: 1 /* SET */,\r\n                path: [...path, prop].map(p => p.toString()),\r\n                value\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        apply(_target, _thisArg, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const last = path[path.length - 1];\r\n            if (last === createEndpoint) {\r\n                return requestResponseMessage(ep, {\r\n                    type: 4 /* ENDPOINT */\r\n                }).then(fromWireValue);\r\n            }\r\n            // We just pretend that `bind()` didn’t happen.\r\n            if (last === \"bind\") {\r\n                return createProxy(ep, path.slice(0, -1));\r\n            }\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: 2 /* APPLY */,\r\n                path: path.map(p => p.toString()),\r\n                argumentList\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        construct(_target, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: 3 /* CONSTRUCT */,\r\n                path: path.map(p => p.toString()),\r\n                argumentList\r\n            }, transferables).then(fromWireValue);\r\n        }\r\n    });\r\n    return proxy;\r\n}\r\nfunction myFlat(arr) {\r\n    return Array.prototype.concat.apply([], arr);\r\n}\r\nfunction processArguments(argumentList) {\r\n    const processed = argumentList.map(toWireValue);\r\n    return [processed.map(v => v[0]), myFlat(processed.map(v => v[1]))];\r\n}\r\nconst transferCache = new WeakMap();\r\nfunction transfer(obj, transfers) {\r\n    transferCache.set(obj, transfers);\r\n    return obj;\r\n}\r\nfunction proxy(obj) {\r\n    return Object.assign(obj, { [proxyMarker]: true });\r\n}\r\nfunction windowEndpoint(w, context = self, targetOrigin = \"*\") {\r\n    return {\r\n        postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\r\n        addEventListener: context.addEventListener.bind(context),\r\n        removeEventListener: context.removeEventListener.bind(context)\r\n    };\r\n}\r\nfunction toWireValue(value) {\r\n    for (const [name, handler] of transferHandlers) {\r\n        if (handler.canHandle(value)) {\r\n            const [serializedValue, transferables] = handler.serialize(value);\r\n            return [\r\n                {\r\n                    type: 3 /* HANDLER */,\r\n                    name,\r\n                    value: serializedValue\r\n                },\r\n                transferables\r\n            ];\r\n        }\r\n    }\r\n    return [\r\n        {\r\n            type: 0 /* RAW */,\r\n            value\r\n        },\r\n        transferCache.get(value) || []\r\n    ];\r\n}\r\nfunction fromWireValue(value) {\r\n    switch (value.type) {\r\n        case 3 /* HANDLER */:\r\n            return transferHandlers.get(value.name).deserialize(value.value);\r\n        case 0 /* RAW */:\r\n            return value.value;\r\n    }\r\n}\r\nfunction requestResponseMessage(ep, msg, transfers) {\r\n    return new Promise(resolve => {\r\n        const id = generateUUID();\r\n        ep.addEventListener(\"message\", function l(ev) {\r\n            if (!ev.data || !ev.data.id || ev.data.id !== id) {\r\n                return;\r\n            }\r\n            ep.removeEventListener(\"message\", l);\r\n            resolve(ev.data);\r\n        });\r\n        if (ep.start) {\r\n            ep.start();\r\n        }\r\n        ep.postMessage(Object.assign({ id }, msg), transfers);\r\n    });\r\n}\r\nfunction generateUUID() {\r\n    return new Array(4)\r\n        .fill(0)\r\n        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\r\n        .join(\"-\");\r\n}\n\nexport { createEndpoint, expose, proxy, proxyMarker, releaseProxy, transfer, transferHandlers, windowEndpoint, wrap };\n//# sourceMappingURL=comlink.mjs.map\n","///NOTE: This file was generated by minify.js from lzma_worker.js. Do not modify.\n\n/// © 2015 Nathan Rugg <nmrugg@gmail.com> | MIT\n/// See LICENSE for more details.\n\n/* jshint noarg:true, boss:true, unused:strict, strict:true, undef:true, noarg: true, forin:true, evil:true, newcap:false, -W041, -W021, worker:true, browser:true, node:true */\n\n/* global setImmediate, setTimeout, window, onmessage */\n\n\n\nvar LZMA = (function () {\n    \n    \"use strict\";\n    \n    var \n        /** ds */\n        action_decompress = 2,\n        /** de */\n        action_progress   = 3,\n        wait = typeof setImmediate == \"function\" ? setImmediate : setTimeout,\n        __4294967296 = 4294967296,\n        N1_longLit = [4294967295, -__4294967296],\n        \n        P0_longLit = [0, 0],\n        P1_longLit = [1, 0];\n    \n    function update_progress(percent, cbn) {\n        postMessage({\n            action: action_progress,\n            cbn: cbn,\n            result: percent\n        });\n    }\n    \n    function initDim(len) {\n        ///NOTE: This is MUCH faster than \"new Array(len)\" in newer versions of v8 (starting with Node.js 0.11.15, which uses v8 3.28.73).\n        var a = [];\n        a[len - 1] = undefined;\n        return a;\n    }\n    \n    function add(a, b) {\n        return create(a[0] + b[0], a[1] + b[1]);\n    }\n    \n    \n    \n    function compare(a, b) {\n        var nega, negb;\n        if (a[0] == b[0] && a[1] == b[1]) {\n            return 0;\n        }\n        nega = a[1] < 0;\n        negb = b[1] < 0;\n        if (nega && !negb) {\n            return -1;\n        }\n        if (!nega && negb) {\n            return 1;\n        }\n        if (sub(a, b)[1] < 0) {\n            return -1;\n        }\n        return 1;\n    }\n    \n    function create(valueLow, valueHigh) {\n        var diffHigh, diffLow;\n        valueHigh %= 1.8446744073709552E19;\n        valueLow %= 1.8446744073709552E19;\n        diffHigh = valueHigh % __4294967296;\n        diffLow = Math.floor(valueLow / __4294967296) * __4294967296;\n        valueHigh = valueHigh - diffHigh + diffLow;\n        valueLow = valueLow - diffLow + diffHigh;\n        while (valueLow < 0) {\n            valueLow += __4294967296;\n            valueHigh -= __4294967296;\n        }\n        while (valueLow > 4294967295) {\n            valueLow -= __4294967296;\n            valueHigh += __4294967296;\n        }\n        valueHigh = valueHigh % 1.8446744073709552E19;\n        while (valueHigh > 9223372032559808512) {\n            valueHigh -= 1.8446744073709552E19;\n        }\n        while (valueHigh < -9223372036854775808) {\n            valueHigh += 1.8446744073709552E19;\n        }\n        return [valueLow, valueHigh];\n    }\n    \n    \n    function fromInt(value) {\n        if (value >= 0) {\n            return [value, 0];\n        } else {\n            return [value + __4294967296, -__4294967296];\n        }\n    }\n    \n    function lowBits_0(a) {\n        if (a[0] >= 2147483648) {\n            return ~~Math.max(Math.min(a[0] - __4294967296, 2147483647), -2147483648);\n        } else {\n            return ~~Math.max(Math.min(a[0], 2147483647), -2147483648);\n        }\n    }\n    \n    \n    function sub(a, b) {\n        return create(a[0] - b[0], a[1] - b[1]);\n    }\n    \n    function $ByteArrayInputStream(this$static, buf) {\n        this$static.buf = buf;\n        this$static.pos = 0;\n        this$static.count = buf.length;\n        return this$static;\n    }\n    \n    /** ds */\n    function $read(this$static) {\n        if (this$static.pos >= this$static.count)\n            return -1;\n        return this$static.buf[this$static.pos++] & 255;\n    }\n    /** de */\n    \n    \n    function $ByteArrayOutputStream(this$static) {\n        this$static.buf = initDim(32);\n        this$static.count = 0;\n        return this$static;\n    }\n    \n    function $toByteArray(this$static) {\n        var data = this$static.buf;\n        data.length = this$static.count;\n        return data;\n    }\n    \n    \n    \n    function $write_0(this$static, buf, off, len) {\n        arraycopy(buf, off, this$static.buf, this$static.count, len);\n        this$static.count += len;\n    }\n    \n    \n    \n    function arraycopy(src, srcOfs, dest, destOfs, len) {\n        for (var i = 0; i < len; ++i) {\n            dest[destOfs + i] = src[srcOfs + i];\n        }\n    }\n    \n    \n    \n    /** ds */\n    function $init_0(this$static, input, output) {\n        var decoder,\n            hex_length = \"\",\n            i,\n            properties = [],\n            r,\n            tmp_length;\n        \n        for (i = 0; i < 5; ++i) {\n            r = $read(input);\n            if (r == -1)\n                throw new Error(\"truncated input\");\n            properties[i] = r << 24 >> 24;\n        }\n        \n        decoder = $Decoder({});\n        if (!$SetDecoderProperties(decoder, properties)) {\n            throw new Error(\"corrupted input\");\n        }\n        for (i = 0; i < 64; i += 8) {\n            r = $read(input);\n            if (r == -1)\n                throw new Error(\"truncated input\");\n            r = r.toString(16);\n            if (r.length == 1) r = \"0\" + r;\n            hex_length = r + \"\" + hex_length;\n        }\n        \n        /// Was the length set in the header (if it was compressed from a stream, the length is all f\"s).\n        if (/^0+$|^f+$/i.test(hex_length)) {\n            /// The length is unknown, so set to -1.\n            this$static.length_0 = N1_longLit;\n        } else {\n            ///NOTE: If there is a problem with the decoder because of the length, you can always set the length to -1 (N1_longLit) which means unknown.\n            tmp_length = parseInt(hex_length, 16);\n            /// If the length is too long to handle, just set it to unknown.\n            if (tmp_length > 4294967295) {\n                this$static.length_0 = N1_longLit;\n            } else {\n                this$static.length_0 = fromInt(tmp_length);\n            }\n        }\n        \n        this$static.chunker = $CodeInChunks(decoder, input, output, this$static.length_0);\n    }\n    \n    function $LZMAByteArrayDecompressor(this$static, data) {\n        this$static.output = $ByteArrayOutputStream({});\n        $init_0(this$static, $ByteArrayInputStream({}, data), this$static.output);\n        return this$static;\n    }\n    /** de */\n    \n    /** ds */\n    function $CopyBlock(this$static, distance, len) {\n        var pos = this$static._pos - distance - 1;\n        if (pos < 0) {\n            pos += this$static._windowSize;\n        }\n        for (; len != 0; --len) {\n            if (pos >= this$static._windowSize) {\n                pos = 0;\n            }\n            this$static._buffer[this$static._pos++] = this$static._buffer[pos++];\n            if (this$static._pos >= this$static._windowSize) {\n                $Flush_0(this$static);\n            }\n        }\n    }\n    \n    function $Create_5(this$static, windowSize) {\n        if (this$static._buffer == null || this$static._windowSize != windowSize) {\n            this$static._buffer = initDim(windowSize);\n        }\n        this$static._windowSize = windowSize;\n        this$static._pos = 0;\n        this$static._streamPos = 0;\n    }\n    \n    function $Flush_0(this$static) {\n        var size = this$static._pos - this$static._streamPos;\n        if (!size) {\n            return;\n        }\n        $write_0(this$static._stream, this$static._buffer, this$static._streamPos, size);\n        if (this$static._pos >= this$static._windowSize) {\n            this$static._pos = 0;\n        }\n        this$static._streamPos = this$static._pos;\n    }\n    \n    function $GetByte(this$static, distance) {\n        var pos = this$static._pos - distance - 1;\n        if (pos < 0) {\n            pos += this$static._windowSize;\n        }\n        return this$static._buffer[pos];\n    }\n    \n    function $PutByte(this$static, b) {\n        this$static._buffer[this$static._pos++] = b;\n        if (this$static._pos >= this$static._windowSize) {\n            $Flush_0(this$static);\n        }\n    }\n    \n    function $ReleaseStream(this$static) {\n        $Flush_0(this$static);\n        this$static._stream = null;\n    }\n    /** de */\n    \n    function GetLenToPosState(len) {\n        len -= 2;\n        if (len < 4) {\n            return len;\n        }\n        return 3;\n    }\n    \n    function StateUpdateChar(index) {\n        if (index < 4) {\n            return 0;\n        }\n        if (index < 10) {\n            return index - 3;\n        }\n        return index - 6;\n    }\n    \n    \n    /** ds */\n    function $Chunker(this$static, decoder) {\n        this$static.decoder = decoder;\n        this$static.encoder = null;\n        this$static.alive = 1;\n        return this$static;\n    }\n    /** de */\n    \n    function $processChunk(this$static) {\n        if (!this$static.alive) {\n            throw new Error(\"bad state\");\n        }\n        \n        if (this$static.encoder) {\n            throw new Error(\"No encoding\");\n            \n        } else {\n            /// co:throw new Error(\"No decoding\");\n            /** ds */\n            $processDecoderChunk(this$static);\n            /** de */\n        }\n        return this$static.alive;\n    }\n    \n    /** ds */\n    function $processDecoderChunk(this$static) {\n        var result = $CodeOneChunk(this$static.decoder);\n        if (result == -1) {\n            throw new Error(\"corrupted input\");\n        }\n        this$static.inBytesProcessed = N1_longLit;\n        this$static.outBytesProcessed = this$static.decoder.nowPos64;\n        if (result || compare(this$static.decoder.outSize, P0_longLit) >= 0 && compare(this$static.decoder.nowPos64, this$static.decoder.outSize) >= 0) {\n            $Flush_0(this$static.decoder.m_OutWindow);\n            $ReleaseStream(this$static.decoder.m_OutWindow);\n            this$static.decoder.m_RangeDecoder.Stream = null;\n            this$static.alive = 0;\n        }\n    }\n    /** de */\n    \n    \n    /** ds */\n    function $CodeInChunks(this$static, inStream, outStream, outSize) {\n        this$static.m_RangeDecoder.Stream = inStream;\n        $ReleaseStream(this$static.m_OutWindow);\n        this$static.m_OutWindow._stream = outStream;\n        $Init_1(this$static);\n        this$static.state = 0;\n        this$static.rep0 = 0;\n        this$static.rep1 = 0;\n        this$static.rep2 = 0;\n        this$static.rep3 = 0;\n        this$static.outSize = outSize;\n        this$static.nowPos64 = P0_longLit;\n        this$static.prevByte = 0;\n        return $Chunker({}, this$static);\n    }\n    \n    function $CodeOneChunk(this$static) {\n        var decoder2, distance, len, numDirectBits, posSlot, posState;\n        posState = lowBits_0(this$static.nowPos64) & this$static.m_PosStateMask;\n        if (!$DecodeBit(this$static.m_RangeDecoder, this$static.m_IsMatchDecoders, (this$static.state << 4) + posState)) {\n            decoder2 = $GetDecoder(this$static.m_LiteralDecoder, lowBits_0(this$static.nowPos64), this$static.prevByte);\n            if (this$static.state < 7) {\n                this$static.prevByte = $DecodeNormal(decoder2, this$static.m_RangeDecoder);\n            } else {\n                this$static.prevByte = $DecodeWithMatchByte(decoder2, this$static.m_RangeDecoder, $GetByte(this$static.m_OutWindow, this$static.rep0));\n            }\n            $PutByte(this$static.m_OutWindow, this$static.prevByte);\n            this$static.state = StateUpdateChar(this$static.state);\n            this$static.nowPos64 = add(this$static.nowPos64, P1_longLit);\n        } else {\n            if ($DecodeBit(this$static.m_RangeDecoder, this$static.m_IsRepDecoders, this$static.state)) {\n                len = 0;\n                if (!$DecodeBit(this$static.m_RangeDecoder, this$static.m_IsRepG0Decoders, this$static.state)) {\n                    if (!$DecodeBit(this$static.m_RangeDecoder, this$static.m_IsRep0LongDecoders, (this$static.state << 4) + posState)) {\n                        this$static.state = this$static.state < 7?9:11;\n                        len = 1;\n                    }\n                } else {\n                    if (!$DecodeBit(this$static.m_RangeDecoder, this$static.m_IsRepG1Decoders, this$static.state)) {\n                        distance = this$static.rep1;\n                    } else {\n                        if (!$DecodeBit(this$static.m_RangeDecoder, this$static.m_IsRepG2Decoders, this$static.state)) {\n                            distance = this$static.rep2;\n                        } else {\n                            distance = this$static.rep3;\n                            this$static.rep3 = this$static.rep2;\n                        }\n                        this$static.rep2 = this$static.rep1;\n                    }\n                    this$static.rep1 = this$static.rep0;\n                    this$static.rep0 = distance;\n                }\n                if (!len) {\n                    len = $Decode(this$static.m_RepLenDecoder, this$static.m_RangeDecoder, posState) + 2;\n                    this$static.state = this$static.state < 7?8:11;\n                }\n            } else {\n                this$static.rep3 = this$static.rep2;\n                this$static.rep2 = this$static.rep1;\n                this$static.rep1 = this$static.rep0;\n                len = 2 + $Decode(this$static.m_LenDecoder, this$static.m_RangeDecoder, posState);\n                this$static.state = this$static.state < 7?7:10;\n                posSlot = $Decode_0(this$static.m_PosSlotDecoder[GetLenToPosState(len)], this$static.m_RangeDecoder);\n                if (posSlot >= 4) {\n                    numDirectBits = (posSlot >> 1) - 1;\n                    this$static.rep0 = (2 | posSlot & 1) << numDirectBits;\n                    if (posSlot < 14) {\n                        this$static.rep0 += ReverseDecode(this$static.m_PosDecoders, this$static.rep0 - posSlot - 1, this$static.m_RangeDecoder, numDirectBits);\n                    } else {\n                        this$static.rep0 += $DecodeDirectBits(this$static.m_RangeDecoder, numDirectBits - 4) << 4;\n                        this$static.rep0 += $ReverseDecode(this$static.m_PosAlignDecoder, this$static.m_RangeDecoder);\n                        if (this$static.rep0 < 0) {\n                            if (this$static.rep0 == -1) {\n                                return 1;\n                            }\n                            return -1;\n                        }\n                    }\n                } else \n                    this$static.rep0 = posSlot;\n            }\n            if (compare(fromInt(this$static.rep0), this$static.nowPos64) >= 0 || this$static.rep0 >= this$static.m_DictionarySizeCheck) {\n                return -1;\n            }\n            $CopyBlock(this$static.m_OutWindow, this$static.rep0, len);\n            this$static.nowPos64 = add(this$static.nowPos64, fromInt(len));\n            this$static.prevByte = $GetByte(this$static.m_OutWindow, 0);\n        }\n        return 0;\n    }\n    \n    function $Decoder(this$static) {\n        this$static.m_OutWindow = {};\n        this$static.m_RangeDecoder = {};\n        this$static.m_IsMatchDecoders = initDim(192);\n        this$static.m_IsRepDecoders = initDim(12);\n        this$static.m_IsRepG0Decoders = initDim(12);\n        this$static.m_IsRepG1Decoders = initDim(12);\n        this$static.m_IsRepG2Decoders = initDim(12);\n        this$static.m_IsRep0LongDecoders = initDim(192);\n        this$static.m_PosSlotDecoder = initDim(4);\n        this$static.m_PosDecoders = initDim(114);\n        this$static.m_PosAlignDecoder = $BitTreeDecoder({}, 4);\n        this$static.m_LenDecoder = $Decoder$LenDecoder({});\n        this$static.m_RepLenDecoder = $Decoder$LenDecoder({});\n        this$static.m_LiteralDecoder = {};\n        for (var i = 0; i < 4; ++i) {\n            this$static.m_PosSlotDecoder[i] = $BitTreeDecoder({}, 6);\n        }\n        return this$static;\n    }\n    \n    function $Init_1(this$static) {\n        this$static.m_OutWindow._streamPos = 0;\n        this$static.m_OutWindow._pos = 0;\n        InitBitModels(this$static.m_IsMatchDecoders);\n        InitBitModels(this$static.m_IsRep0LongDecoders);\n        InitBitModels(this$static.m_IsRepDecoders);\n        InitBitModels(this$static.m_IsRepG0Decoders);\n        InitBitModels(this$static.m_IsRepG1Decoders);\n        InitBitModels(this$static.m_IsRepG2Decoders);\n        InitBitModels(this$static.m_PosDecoders);\n        $Init_0(this$static.m_LiteralDecoder);\n        for (var i = 0; i < 4; ++i) {\n            InitBitModels(this$static.m_PosSlotDecoder[i].Models);\n        }\n        $Init(this$static.m_LenDecoder);\n        $Init(this$static.m_RepLenDecoder);\n        InitBitModels(this$static.m_PosAlignDecoder.Models);\n        $Init_8(this$static.m_RangeDecoder);\n    }\n    \n    function $SetDecoderProperties(this$static, properties) {\n        var dictionarySize, i, lc, lp, pb, remainder, val;\n        if (properties.length < 5)\n            return 0;\n        val = properties[0] & 255;\n        lc = val % 9;\n        remainder = ~~(val / 9);\n        lp = remainder % 5;\n        pb = ~~(remainder / 5);\n        dictionarySize = 0;\n        for (i = 0; i < 4; ++i) {\n            dictionarySize += (properties[1 + i] & 255) << i * 8;\n        }\n        ///NOTE: If the input is bad, it might call for an insanely large dictionary size, which would crash the script.\n        if (dictionarySize > 99999999 || !$SetLcLpPb(this$static, lc, lp, pb)) {\n            return 0;\n        }\n        return $SetDictionarySize(this$static, dictionarySize);\n    }\n    \n    function $SetDictionarySize(this$static, dictionarySize) {\n        if (dictionarySize < 0) {\n            return 0;\n        }\n        if (this$static.m_DictionarySize != dictionarySize) {\n            this$static.m_DictionarySize = dictionarySize;\n            this$static.m_DictionarySizeCheck = Math.max(this$static.m_DictionarySize, 1);\n            $Create_5(this$static.m_OutWindow, Math.max(this$static.m_DictionarySizeCheck, 4096));\n        }\n        return 1;\n    }\n    \n    function $SetLcLpPb(this$static, lc, lp, pb) {\n        if (lc > 8 || lp > 4 || pb > 4) {\n            return 0;\n        }\n        $Create_0(this$static.m_LiteralDecoder, lp, lc);\n        var numPosStates = 1 << pb;\n        $Create(this$static.m_LenDecoder, numPosStates);\n        $Create(this$static.m_RepLenDecoder, numPosStates);\n        this$static.m_PosStateMask = numPosStates - 1;\n        return 1;\n    }\n    \n    function $Create(this$static, numPosStates) {\n        for (; this$static.m_NumPosStates < numPosStates; ++this$static.m_NumPosStates) {\n            this$static.m_LowCoder[this$static.m_NumPosStates] = $BitTreeDecoder({}, 3);\n            this$static.m_MidCoder[this$static.m_NumPosStates] = $BitTreeDecoder({}, 3);\n        }\n    }\n    \n    function $Decode(this$static, rangeDecoder, posState) {\n        if (!$DecodeBit(rangeDecoder, this$static.m_Choice, 0)) {\n            return $Decode_0(this$static.m_LowCoder[posState], rangeDecoder);\n        }\n        var symbol = 8;\n        if (!$DecodeBit(rangeDecoder, this$static.m_Choice, 1)) {\n            symbol += $Decode_0(this$static.m_MidCoder[posState], rangeDecoder);\n        } else {\n            symbol += 8 + $Decode_0(this$static.m_HighCoder, rangeDecoder);\n        }\n        return symbol;\n    }\n    \n    function $Decoder$LenDecoder(this$static) {\n        this$static.m_Choice = initDim(2);\n        this$static.m_LowCoder = initDim(16);\n        this$static.m_MidCoder = initDim(16);\n        this$static.m_HighCoder = $BitTreeDecoder({}, 8);\n        this$static.m_NumPosStates = 0;\n        return this$static;\n    }\n    \n    function $Init(this$static) {\n        InitBitModels(this$static.m_Choice);\n        for (var posState = 0; posState < this$static.m_NumPosStates; ++posState) {\n            InitBitModels(this$static.m_LowCoder[posState].Models);\n            InitBitModels(this$static.m_MidCoder[posState].Models);\n        }\n        InitBitModels(this$static.m_HighCoder.Models);\n    }\n    \n    \n    function $Create_0(this$static, numPosBits, numPrevBits) {\n        var i, numStates;\n        if (this$static.m_Coders != null && this$static.m_NumPrevBits == numPrevBits && this$static.m_NumPosBits == numPosBits)\n            return;\n        this$static.m_NumPosBits = numPosBits;\n        this$static.m_PosMask = (1 << numPosBits) - 1;\n        this$static.m_NumPrevBits = numPrevBits;\n        numStates = 1 << this$static.m_NumPrevBits + this$static.m_NumPosBits;\n        this$static.m_Coders = initDim(numStates);\n        for (i = 0; i < numStates; ++i)\n            this$static.m_Coders[i] = $Decoder$LiteralDecoder$Decoder2({});\n    }\n    \n    function $GetDecoder(this$static, pos, prevByte) {\n        return this$static.m_Coders[((pos & this$static.m_PosMask) << this$static.m_NumPrevBits) + ((prevByte & 255) >>> 8 - this$static.m_NumPrevBits)];\n    }\n    \n    function $Init_0(this$static) {\n        var i, numStates;\n        numStates = 1 << this$static.m_NumPrevBits + this$static.m_NumPosBits;\n        for (i = 0; i < numStates; ++i) {\n            InitBitModels(this$static.m_Coders[i].m_Decoders);\n        }\n    }\n    \n    \n    function $DecodeNormal(this$static, rangeDecoder) {\n        var symbol = 1;\n        do {\n            symbol = symbol << 1 | $DecodeBit(rangeDecoder, this$static.m_Decoders, symbol);\n        } while (symbol < 256);\n        return symbol << 24 >> 24;\n    }\n    \n    function $DecodeWithMatchByte(this$static, rangeDecoder, matchByte) {\n        var bit, matchBit, symbol = 1;\n        do {\n            matchBit = matchByte >> 7 & 1;\n            matchByte <<= 1;\n            bit = $DecodeBit(rangeDecoder, this$static.m_Decoders, (1 + matchBit << 8) + symbol);\n            symbol = symbol << 1 | bit;\n            if (matchBit != bit) {\n                while (symbol < 256) {\n                    symbol = symbol << 1 | $DecodeBit(rangeDecoder, this$static.m_Decoders, symbol);\n                }\n            break;\n            }\n        } while (symbol < 256);\n        return symbol << 24 >> 24;\n    }\n    \n    function $Decoder$LiteralDecoder$Decoder2(this$static) {\n        this$static.m_Decoders = initDim(768);\n        return this$static;\n    }\n    \n    /** de */\n    \n    /** ds */\n    function $BitTreeDecoder(this$static, numBitLevels) {\n        this$static.NumBitLevels = numBitLevels;\n        this$static.Models = initDim(1 << numBitLevels);\n        return this$static;\n    }\n    \n    function $Decode_0(this$static, rangeDecoder) {\n        var bitIndex, m = 1;\n        for (bitIndex = this$static.NumBitLevels; bitIndex != 0; --bitIndex) {\n            m = (m << 1) + $DecodeBit(rangeDecoder, this$static.Models, m);\n        }\n        return m - (1 << this$static.NumBitLevels);\n    }\n    \n    function $ReverseDecode(this$static, rangeDecoder) {\n        var bit, bitIndex, m = 1, symbol = 0;\n        for (bitIndex = 0; bitIndex < this$static.NumBitLevels; ++bitIndex) {\n            bit = $DecodeBit(rangeDecoder, this$static.Models, m);\n            m <<= 1;\n            m += bit;\n            symbol |= bit << bitIndex;\n        }\n        return symbol;\n    }\n    \n    function ReverseDecode(Models, startIndex, rangeDecoder, NumBitLevels) {\n        var bit, bitIndex, m = 1, symbol = 0;\n        for (bitIndex = 0; bitIndex < NumBitLevels; ++bitIndex) {\n            bit = $DecodeBit(rangeDecoder, Models, startIndex + m);\n            m <<= 1;\n            m += bit;\n            symbol |= bit << bitIndex;\n        }\n        return symbol;\n    }\n    /** de */\n    \n    /** ds */\n    function $DecodeBit(this$static, probs, index) {\n        var newBound, prob = probs[index];\n        newBound = (this$static.Range >>> 11) * prob;\n        if ((this$static.Code ^ -2147483648) < (newBound ^ -2147483648)) {\n            this$static.Range = newBound;\n            probs[index] = prob + (2048 - prob >>> 5) << 16 >> 16;\n            if (!(this$static.Range & -16777216)) {\n                this$static.Code = this$static.Code << 8 | $read(this$static.Stream);\n                this$static.Range <<= 8;\n            }\n            return 0;\n        } else {\n            this$static.Range -= newBound;\n            this$static.Code -= newBound;\n            probs[index] = prob - (prob >>> 5) << 16 >> 16;\n            if (!(this$static.Range & -16777216)) {\n                this$static.Code = this$static.Code << 8 | $read(this$static.Stream);\n                this$static.Range <<= 8;\n            }\n            return 1;\n        }\n    }\n    \n    function $DecodeDirectBits(this$static, numTotalBits) {\n        var i, t, result = 0;\n        for (i = numTotalBits; i != 0; --i) {\n            this$static.Range >>>= 1;\n            t = this$static.Code - this$static.Range >>> 31;\n            this$static.Code -= this$static.Range & t - 1;\n            result = result << 1 | 1 - t;\n            if (!(this$static.Range & -16777216)) {\n                this$static.Code = this$static.Code << 8 | $read(this$static.Stream);\n                this$static.Range <<= 8;\n            }\n        }\n        return result;\n    }\n    \n    function $Init_8(this$static) {\n        this$static.Code = 0;\n        this$static.Range = -1;\n        for (var i = 0; i < 5; ++i) {\n            this$static.Code = this$static.Code << 8 | $read(this$static.Stream);\n        }\n    }\n    /** de */\n    \n    function InitBitModels(probs) {\n        for (var i = probs.length - 1; i >= 0; --i) {\n            probs[i] = 1024;\n        }\n    }\n    \n    /** ds */\n    function decode(utf) {\n        var i = 0, j = 0, x, y, z, l = utf.length, buf = [], charCodes = [];\n        for (; i < l; ++i, ++j) {\n            x = utf[i] & 255;\n            if (!(x & 128)) {\n                if (!x) {\n                    /// It appears that this is binary data, so it cannot be converted to a string, so just send it back.\n                    return utf;\n                }\n                charCodes[j] = x;\n            } else if ((x & 224) == 192) {\n                if (i + 1 >= l) {\n                    /// It appears that this is binary data, so it cannot be converted to a string, so just send it back.\n                    return utf;\n                }\n                y = utf[++i] & 255;\n                if ((y & 192) != 128) {\n                    /// It appears that this is binary data, so it cannot be converted to a string, so just send it back.\n                    return utf;\n                }\n                charCodes[j] = ((x & 31) << 6) | (y & 63);\n            } else if ((x & 240) == 224) {\n                if (i + 2 >= l) {\n                    /// It appears that this is binary data, so it cannot be converted to a string, so just send it back.\n                    return utf;\n                }\n                y = utf[++i] & 255;\n                if ((y & 192) != 128) {\n                    /// It appears that this is binary data, so it cannot be converted to a string, so just send it back.\n                    return utf;\n                }\n                z = utf[++i] & 255;\n                if ((z & 192) != 128) {\n                    /// It appears that this is binary data, so it cannot be converted to a string, so just send it back.\n                    return utf;\n                }\n                charCodes[j] = ((x & 15) << 12) | ((y & 63) << 6) | (z & 63);\n            } else {\n                /// It appears that this is binary data, so it cannot be converted to a string, so just send it back.\n                return utf;\n            }\n            if (j == 16383) {\n                buf.push(String.fromCharCode.apply(String, charCodes));\n                j = -1;\n            }\n        }\n        if (j > 0) {\n            charCodes.length = j;\n            buf.push(String.fromCharCode.apply(String, charCodes));\n        }\n        return buf.join(\"\");\n    }\n    /** de */\n    \n    \n    function toDouble(a) {\n        return a[1] + a[0];\n    }\n    \n    \n    /** ds */\n    function decompress(byte_arr, on_finish, on_progress) {\n        var this$static = {},\n            percent,\n            cbn, /// A callback number should be supplied instead of on_finish() if we are using Web Workers.\n            has_progress,\n            len,\n            sync = typeof on_finish == \"undefined\" && typeof on_progress == \"undefined\";\n\n        if (typeof on_finish != \"function\") {\n            cbn = on_finish;\n            on_finish = on_progress = 0;\n        }\n        \n        on_progress = on_progress || function(percent) {\n            if (typeof cbn == \"undefined\")\n                return;\n            \n            return update_progress(has_progress ? percent : -1, cbn);\n        };\n        \n        on_finish = on_finish || function(res, err) {\n            if (typeof cbn == \"undefined\")\n                return;\n            \n            return postMessage({\n                action: action_decompress,\n                cbn: cbn,\n                result: res,\n                error: err\n            });\n        };\n\n        if (sync) {\n            this$static.d = $LZMAByteArrayDecompressor({}, byte_arr);\n            while ($processChunk(this$static.d.chunker));\n            return decode($toByteArray(this$static.d.output));\n        }\n        \n        try {\n            this$static.d = $LZMAByteArrayDecompressor({}, byte_arr);\n            \n            len = toDouble(this$static.d.length_0);\n            \n            ///NOTE: If the data was created via a stream, it will not have a length value, and therefore we can't calculate the progress.\n            has_progress = len > -1;\n            \n            on_progress(0);\n        } catch (err) {\n            return on_finish(null, err);\n        }\n        \n        function do_action() {\n            try {\n                var res, i = 0, start = (new Date()).getTime();\n                while ($processChunk(this$static.d.chunker)) {\n                    if (++i % 1000 == 0 && (new Date()).getTime() - start > 200) {\n                        if (has_progress) {\n                            percent = toDouble(this$static.d.chunker.decoder.nowPos64) / len;\n                            /// If about 200 miliseconds have passed, update the progress.\n                            on_progress(percent);\n                        }\n                        \n                        ///NOTE: This allows other code to run, like the browser to update.\n                        wait(do_action, 0);\n                        return 0;\n                    }\n                }\n                \n                on_progress(1);\n                \n                res = decode($toByteArray(this$static.d.output));\n                \n                /// delay so we don’t catch errors from the on_finish handler\n                wait(on_finish.bind(null, res), 0);\n            } catch (err) {\n                on_finish(null, err);\n            }\n        }\n        \n        ///NOTE: We need to wait to make sure it is always async.\n        wait(do_action, 0);\n    }\n    /** de */\n    \n    \n    /// If we're in a Web Worker, create the onmessage() communication channel.\n    ///NOTE: This seems to be the most reliable way to detect this.\n    if (typeof onmessage != \"undefined\" && (typeof window == \"undefined\" || typeof window.document == \"undefined\")) {\n        (function () {\n            /* jshint -W020 */\n            /// Create the global onmessage function.\n            onmessage = function (e) {\n                if (e && e.data) {\n                    \n                    /// co:if (e.data.action == action_compress) {\n                    /// co:    LZMA.compress(e.data.data, e.data.mode, e.data.cbn);\n                    /// co:}\n                    if (e.data.action == action_decompress) {\n                        LZMA.decompress(e.data.data, e.data.cbn);\n                    }\n                }\n            };\n        }());\n    }\n        \n    return {\n        \n        /// co:compress:   compress\n        decompress: decompress\n    };\n}());\n\n/// This is used by browsers that do not support web workers (and possibly Node.js).\nthis.LZMA = this.LZMA_WORKER = LZMA;\n","class XRAvatar {\n    constructor (data) {\n        this.data = data;\n    }\n}\n\nexport {\n    XRAvatar\n}","import * as Comlink from \"comlink/dist/esm/comlink.mjs\";\nimport \"lzma/src/lzma-d.js\";\nimport {\n    XRAvatar\n} from './xravatar.js';\n\nconst dialogStyle = \"position: absolute; top: 5vh; left: 5vw; width: 90vw; height: 90vh; border: 2px solid #0A78FC; box-shadow: 10px 10px 10px 0em rgba(0,0,0,0.5);\";\n\nclass AvatarLoader {\n  constructor ( url ) {\n    this.apiURL = url;\n    this.iframe = null;\n    this.comlink = null;\n  }\n  \n  static async decompress (array) {\n    return new Promise(resolve => window.LZMA.decompress(array, resolve));\n  }\n\n  async getComlink () {\n    return this.comlink || await (async () => {\n      const comlinkIframe = this.iframe = document.createElement('iframe');\n      comlinkIframe.setAttribute('sandbox', \"allow-scripts allow-same-origin\");\n      comlinkIframe.setAttribute('referrerpolicy', \"strict-origin\");\n      comlinkIframe.src = this.apiURL;\n      comlinkIframe.setAttribute('style',dialogStyle)\n      comlinkIframe.style.visibility = 'hidden';\n      document.body.appendChild(comlinkIframe);\n      this.comlink = await new Promise((resolve, reject) => {\n        comlinkIframe.onload = async function iframeLoaded() {\n          const api = Comlink.wrap(Comlink.windowEndpoint(comlinkIframe.contentWindow));\n          resolve(api);\n        }\n        comlinkIframe.onerror = function iframeError(e) {\n          reject(Error('Iframe failed to load: ' + e.message));\n        }\n      });\n      return this.comlink;\n    })()\n  }\n\n  async attemptLoad () {\n    const api = await this.getComlink();\n    console.log(await api.testVal);\n\n    if (await api.canDoLocalStorage()) {\n      const hasAvatar = await api.hasAvatar();\n      console.log({hasAvatar});\n      const hasPermission = await api.hasPermission();\n      console.log({hasPermission});\n  \n      // Everything is all good go ahead and get the avatar\n      if (hasAvatar && hasPermission) return {result: true};\n      \n      // Something went wrong either no avatar or no permission\n      // Show the iframe\n      this.iframe.style.visibility = '';\n  \n      try {\n        await api.getPermission();\n        console.log('Permission Granted!!');\n        this.iframe.style.visibility = 'hidden';\n        return {result: true};\n      } catch (e) {\n        this.iframe.style.visibility = 'hidden';\n        return {\n          result: false,\n          message: e.message\n        };\n      }\n\n    } else {\n      // Oh dear the user agent is blocking third party storage\n      //No worries we will just have to navigate there instead to get the avatar as a URL encoded string\n      const locationBits = new URL(location.href);\n      location.assign(this.apiURL + '?redirect=' + encodeURIComponent(locationBits.origin + locationBits.pathname));\n      return {\n        result: false,\n        message: \"Redirecting to get avatar\"\n      }\n    }\n  }\n\n  static async loadAvatarFromBase64(base64) {\n    const string = atob(base64);\n    const array = [...string].map(c => c.charCodeAt(0) - 128);\n    const json = await AvatarLoader.decompress(array);\n    return new XRAvatar(JSON.parse(json));\n  }\n\n  async getAvatarAsJSON () {\n    const api = await this.getComlink();\n    return new XRAvatar(await api.getAvatarAsJSON());\n  }\n\n  cleanUp () {\n    this.iframe.parentNode.removeChild(this.iframe);\n    this.iframe = null;\n    this.comlink = null;\n  }\n}\n\nexport {\n  AvatarLoader\n}","/*\n  This is the starting point for loading the avatar\n\n  THIS IS COMPILED, naked imports are okay.\n\n  1. Load iframe small, detect if we need to get avatar\n  2. (If permission required) Show iframe to get permission\n  3. Get the Avatar string\n*/\n\n// <!-- This is an iframe which treats api.html as if it were a 3rd party -->\n// <!-- This is for testing the 3rd party client integration -->\n// <iframe sandbox=\"allow-scripts\" src=\"api.html\" style=\"position: absolute; top: 5vh; left: 5vw; width: 90vw; height: 90vh; border: 2px solid var(--blue);\"></iframe>\n\nimport {\n  AvatarLoader\n} from './xravatarLoader.js';\n\nasync function checkURL() {\n  const xravatarSearchParam = new URLSearchParams(new URL(location.href).search).get('xravatar');\n  if (xravatarSearchParam) {\n    const avatar = await AvatarLoader.loadAvatarFromBase64(xravatarSearchParam.replace(/ /gi,'+'));\n    return avatar;\n  }\n}\n\nasync function getAvatar(url) {\n  const avatarLoader = new AvatarLoader(url);\n\n  // Creates an iframe to get permission or to prompt the user to make an avatar \n  let test = await avatarLoader.attemptLoad();\n\n  // removes the iframe\n  avatarLoader.cleanUp();\n\n  if (test.result === false) {\n      throw Error(test.message);\n  } else if (test.result === true) {\n\n      // Uses the same iframe to load the avatar\n      const avatar = await avatarLoader.getAvatarAsJSON();\n      return avatar;\n  }\n}\n\nfunction avatarToThreeMesh(avatar) {\n  console.log(avatar);\n}\n\nexport {\n  AvatarLoader,\n  checkURL,\n  getAvatar,\n  avatarToThreeMesh\n}"],"names":["this","Comlink.wrap","Comlink.windowEndpoint"],"mappings":"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"}