{"version":3,"file":"xravatar.three.min.js","sources":["../node_modules/comlink/dist/esm/comlink.mjs","../node_modules/lzma/src/lzma-d.js","../lib/xravatar.js","../lib/xravatarLoader.js","../lib/glsl/common.glsl.js","../lib/glsl/map_fragment.glsl.js","../lib/schema.js","../lib/canvasPaletteMap.js","../lib/xravatar.three.js"],"sourcesContent":["/**\r\n * Copyright 2019 Google Inc. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst proxyMarker = Symbol(\"Comlink.proxy\");\r\nconst createEndpoint = Symbol(\"Comlink.endpoint\");\r\nconst releaseProxy = Symbol(\"Comlink.releaseProxy\");\r\nconst throwSet = new WeakSet();\r\nconst transferHandlers = new Map([\r\n    [\r\n        \"proxy\",\r\n        {\r\n            canHandle: obj => obj && obj[proxyMarker],\r\n            serialize(obj) {\r\n                const { port1, port2 } = new MessageChannel();\r\n                expose(obj, port1);\r\n                return [port2, [port2]];\r\n            },\r\n            deserialize: (port) => {\r\n                port.start();\r\n                return wrap(port);\r\n            }\r\n        }\r\n    ],\r\n    [\r\n        \"throw\",\r\n        {\r\n            canHandle: obj => throwSet.has(obj),\r\n            serialize(obj) {\r\n                const isError = obj instanceof Error;\r\n                let serialized = obj;\r\n                if (isError) {\r\n                    serialized = {\r\n                        isError,\r\n                        message: obj.message,\r\n                        stack: obj.stack\r\n                    };\r\n                }\r\n                return [serialized, []];\r\n            },\r\n            deserialize(obj) {\r\n                if (obj.isError) {\r\n                    throw Object.assign(new Error(), obj);\r\n                }\r\n                throw obj;\r\n            }\r\n        }\r\n    ]\r\n]);\r\nfunction expose(obj, ep = self) {\r\n    ep.addEventListener(\"message\", function callback(ev) {\r\n        if (!ev || !ev.data) {\r\n            return;\r\n        }\r\n        const { id, type, path } = Object.assign({ path: [] }, ev.data);\r\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\r\n        let returnValue;\r\n        try {\r\n            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\r\n            const rawValue = path.reduce((obj, prop) => obj[prop], obj);\r\n            switch (type) {\r\n                case 0 /* GET */:\r\n                    {\r\n                        returnValue = rawValue;\r\n                    }\r\n                    break;\r\n                case 1 /* SET */:\r\n                    {\r\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\r\n                        returnValue = true;\r\n                    }\r\n                    break;\r\n                case 2 /* APPLY */:\r\n                    {\r\n                        returnValue = rawValue.apply(parent, argumentList);\r\n                    }\r\n                    break;\r\n                case 3 /* CONSTRUCT */:\r\n                    {\r\n                        const value = new rawValue(...argumentList);\r\n                        returnValue = proxy(value);\r\n                    }\r\n                    break;\r\n                case 4 /* ENDPOINT */:\r\n                    {\r\n                        const { port1, port2 } = new MessageChannel();\r\n                        expose(obj, port2);\r\n                        returnValue = transfer(port1, [port1]);\r\n                    }\r\n                    break;\r\n                case 5 /* RELEASE */:\r\n                    {\r\n                        returnValue = undefined;\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        catch (e) {\r\n            returnValue = e;\r\n            throwSet.add(e);\r\n        }\r\n        Promise.resolve(returnValue)\r\n            .catch(e => {\r\n            throwSet.add(e);\r\n            return e;\r\n        })\r\n            .then(returnValue => {\r\n            const [wireValue, transferables] = toWireValue(returnValue);\r\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\r\n            if (type === 5 /* RELEASE */) {\r\n                // detach and deactive after sending release response above.\r\n                ep.removeEventListener(\"message\", callback);\r\n                closeEndPoint(ep);\r\n            }\r\n        });\r\n    });\r\n    if (ep.start) {\r\n        ep.start();\r\n    }\r\n}\r\nfunction isMessagePort(endpoint) {\r\n    return endpoint.constructor.name === \"MessagePort\";\r\n}\r\nfunction closeEndPoint(endpoint) {\r\n    if (isMessagePort(endpoint))\r\n        endpoint.close();\r\n}\r\nfunction wrap(ep, target) {\r\n    return createProxy(ep, [], target);\r\n}\r\nfunction throwIfProxyReleased(isReleased) {\r\n    if (isReleased) {\r\n        throw new Error(\"Proxy has been released and is not useable\");\r\n    }\r\n}\r\nfunction createProxy(ep, path = [], target = function () { }) {\r\n    let isProxyReleased = false;\r\n    const proxy = new Proxy(target, {\r\n        get(_target, prop) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            if (prop === releaseProxy) {\r\n                return () => {\r\n                    return requestResponseMessage(ep, {\r\n                        type: 5 /* RELEASE */,\r\n                        path: path.map(p => p.toString())\r\n                    }).then(() => {\r\n                        closeEndPoint(ep);\r\n                        isProxyReleased = true;\r\n                    });\r\n                };\r\n            }\r\n            if (prop === \"then\") {\r\n                if (path.length === 0) {\r\n                    return { then: () => proxy };\r\n                }\r\n                const r = requestResponseMessage(ep, {\r\n                    type: 0 /* GET */,\r\n                    path: path.map(p => p.toString())\r\n                }).then(fromWireValue);\r\n                return r.then.bind(r);\r\n            }\r\n            return createProxy(ep, [...path, prop]);\r\n        },\r\n        set(_target, prop, rawValue) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\r\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\r\n            const [value, transferables] = toWireValue(rawValue);\r\n            return requestResponseMessage(ep, {\r\n                type: 1 /* SET */,\r\n                path: [...path, prop].map(p => p.toString()),\r\n                value\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        apply(_target, _thisArg, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const last = path[path.length - 1];\r\n            if (last === createEndpoint) {\r\n                return requestResponseMessage(ep, {\r\n                    type: 4 /* ENDPOINT */\r\n                }).then(fromWireValue);\r\n            }\r\n            // We just pretend that `bind()` didn’t happen.\r\n            if (last === \"bind\") {\r\n                return createProxy(ep, path.slice(0, -1));\r\n            }\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: 2 /* APPLY */,\r\n                path: path.map(p => p.toString()),\r\n                argumentList\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        construct(_target, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: 3 /* CONSTRUCT */,\r\n                path: path.map(p => p.toString()),\r\n                argumentList\r\n            }, transferables).then(fromWireValue);\r\n        }\r\n    });\r\n    return proxy;\r\n}\r\nfunction myFlat(arr) {\r\n    return Array.prototype.concat.apply([], arr);\r\n}\r\nfunction processArguments(argumentList) {\r\n    const processed = argumentList.map(toWireValue);\r\n    return [processed.map(v => v[0]), myFlat(processed.map(v => v[1]))];\r\n}\r\nconst transferCache = new WeakMap();\r\nfunction transfer(obj, transfers) {\r\n    transferCache.set(obj, transfers);\r\n    return obj;\r\n}\r\nfunction proxy(obj) {\r\n    return Object.assign(obj, { [proxyMarker]: true });\r\n}\r\nfunction windowEndpoint(w, context = self, targetOrigin = \"*\") {\r\n    return {\r\n        postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\r\n        addEventListener: context.addEventListener.bind(context),\r\n        removeEventListener: context.removeEventListener.bind(context)\r\n    };\r\n}\r\nfunction toWireValue(value) {\r\n    for (const [name, handler] of transferHandlers) {\r\n        if (handler.canHandle(value)) {\r\n            const [serializedValue, transferables] = handler.serialize(value);\r\n            return [\r\n                {\r\n                    type: 3 /* HANDLER */,\r\n                    name,\r\n                    value: serializedValue\r\n                },\r\n                transferables\r\n            ];\r\n        }\r\n    }\r\n    return [\r\n        {\r\n            type: 0 /* RAW */,\r\n            value\r\n        },\r\n        transferCache.get(value) || []\r\n    ];\r\n}\r\nfunction fromWireValue(value) {\r\n    switch (value.type) {\r\n        case 3 /* HANDLER */:\r\n            return transferHandlers.get(value.name).deserialize(value.value);\r\n        case 0 /* RAW */:\r\n            return value.value;\r\n    }\r\n}\r\nfunction requestResponseMessage(ep, msg, transfers) {\r\n    return new Promise(resolve => {\r\n        const id = generateUUID();\r\n        ep.addEventListener(\"message\", function l(ev) {\r\n            if (!ev.data || !ev.data.id || ev.data.id !== id) {\r\n                return;\r\n            }\r\n            ep.removeEventListener(\"message\", l);\r\n            resolve(ev.data);\r\n        });\r\n        if (ep.start) {\r\n            ep.start();\r\n        }\r\n        ep.postMessage(Object.assign({ id }, msg), transfers);\r\n    });\r\n}\r\nfunction generateUUID() {\r\n    return new Array(4)\r\n        .fill(0)\r\n        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\r\n        .join(\"-\");\r\n}\n\nexport { createEndpoint, expose, proxy, proxyMarker, releaseProxy, transfer, transferHandlers, windowEndpoint, wrap };\n//# sourceMappingURL=comlink.mjs.map\n","///NOTE: This file was generated by minify.js from lzma_worker.js. Do not modify.\n\n/// © 2015 Nathan Rugg <nmrugg@gmail.com> | MIT\n/// See LICENSE for more details.\n\n/* jshint noarg:true, boss:true, unused:strict, strict:true, undef:true, noarg: true, forin:true, evil:true, newcap:false, -W041, -W021, worker:true, browser:true, node:true */\n\n/* global setImmediate, setTimeout, window, onmessage */\n\n\n\nvar LZMA = (function () {\n    \n    \"use strict\";\n    \n    var \n        /** ds */\n        action_decompress = 2,\n        /** de */\n        action_progress   = 3,\n        wait = typeof setImmediate == \"function\" ? setImmediate : setTimeout,\n        __4294967296 = 4294967296,\n        N1_longLit = [4294967295, -__4294967296],\n        \n        P0_longLit = [0, 0],\n        P1_longLit = [1, 0];\n    \n    function update_progress(percent, cbn) {\n        postMessage({\n            action: action_progress,\n            cbn: cbn,\n            result: percent\n        });\n    }\n    \n    function initDim(len) {\n        ///NOTE: This is MUCH faster than \"new Array(len)\" in newer versions of v8 (starting with Node.js 0.11.15, which uses v8 3.28.73).\n        var a = [];\n        a[len - 1] = undefined;\n        return a;\n    }\n    \n    function add(a, b) {\n        return create(a[0] + b[0], a[1] + b[1]);\n    }\n    \n    \n    \n    function compare(a, b) {\n        var nega, negb;\n        if (a[0] == b[0] && a[1] == b[1]) {\n            return 0;\n        }\n        nega = a[1] < 0;\n        negb = b[1] < 0;\n        if (nega && !negb) {\n            return -1;\n        }\n        if (!nega && negb) {\n            return 1;\n        }\n        if (sub(a, b)[1] < 0) {\n            return -1;\n        }\n        return 1;\n    }\n    \n    function create(valueLow, valueHigh) {\n        var diffHigh, diffLow;\n        valueHigh %= 1.8446744073709552E19;\n        valueLow %= 1.8446744073709552E19;\n        diffHigh = valueHigh % __4294967296;\n        diffLow = Math.floor(valueLow / __4294967296) * __4294967296;\n        valueHigh = valueHigh - diffHigh + diffLow;\n        valueLow = valueLow - diffLow + diffHigh;\n        while (valueLow < 0) {\n            valueLow += __4294967296;\n            valueHigh -= __4294967296;\n        }\n        while (valueLow > 4294967295) {\n            valueLow -= __4294967296;\n            valueHigh += __4294967296;\n        }\n        valueHigh = valueHigh % 1.8446744073709552E19;\n        while (valueHigh > 9223372032559808512) {\n            valueHigh -= 1.8446744073709552E19;\n        }\n        while (valueHigh < -9223372036854775808) {\n            valueHigh += 1.8446744073709552E19;\n        }\n        return [valueLow, valueHigh];\n    }\n    \n    \n    function fromInt(value) {\n        if (value >= 0) {\n            return [value, 0];\n        } else {\n            return [value + __4294967296, -__4294967296];\n        }\n    }\n    \n    function lowBits_0(a) {\n        if (a[0] >= 2147483648) {\n            return ~~Math.max(Math.min(a[0] - __4294967296, 2147483647), -2147483648);\n        } else {\n            return ~~Math.max(Math.min(a[0], 2147483647), -2147483648);\n        }\n    }\n    \n    \n    function sub(a, b) {\n        return create(a[0] - b[0], a[1] - b[1]);\n    }\n    \n    function $ByteArrayInputStream(this$static, buf) {\n        this$static.buf = buf;\n        this$static.pos = 0;\n        this$static.count = buf.length;\n        return this$static;\n    }\n    \n    /** ds */\n    function $read(this$static) {\n        if (this$static.pos >= this$static.count)\n            return -1;\n        return this$static.buf[this$static.pos++] & 255;\n    }\n    /** de */\n    \n    \n    function $ByteArrayOutputStream(this$static) {\n        this$static.buf = initDim(32);\n        this$static.count = 0;\n        return this$static;\n    }\n    \n    function $toByteArray(this$static) {\n        var data = this$static.buf;\n        data.length = this$static.count;\n        return data;\n    }\n    \n    \n    \n    function $write_0(this$static, buf, off, len) {\n        arraycopy(buf, off, this$static.buf, this$static.count, len);\n        this$static.count += len;\n    }\n    \n    \n    \n    function arraycopy(src, srcOfs, dest, destOfs, len) {\n        for (var i = 0; i < len; ++i) {\n            dest[destOfs + i] = src[srcOfs + i];\n        }\n    }\n    \n    \n    \n    /** ds */\n    function $init_0(this$static, input, output) {\n        var decoder,\n            hex_length = \"\",\n            i,\n            properties = [],\n            r,\n            tmp_length;\n        \n        for (i = 0; i < 5; ++i) {\n            r = $read(input);\n            if (r == -1)\n                throw new Error(\"truncated input\");\n            properties[i] = r << 24 >> 24;\n        }\n        \n        decoder = $Decoder({});\n        if (!$SetDecoderProperties(decoder, properties)) {\n            throw new Error(\"corrupted input\");\n        }\n        for (i = 0; i < 64; i += 8) {\n            r = $read(input);\n            if (r == -1)\n                throw new Error(\"truncated input\");\n            r = r.toString(16);\n            if (r.length == 1) r = \"0\" + r;\n            hex_length = r + \"\" + hex_length;\n        }\n        \n        /// Was the length set in the header (if it was compressed from a stream, the length is all f\"s).\n        if (/^0+$|^f+$/i.test(hex_length)) {\n            /// The length is unknown, so set to -1.\n            this$static.length_0 = N1_longLit;\n        } else {\n            ///NOTE: If there is a problem with the decoder because of the length, you can always set the length to -1 (N1_longLit) which means unknown.\n            tmp_length = parseInt(hex_length, 16);\n            /// If the length is too long to handle, just set it to unknown.\n            if (tmp_length > 4294967295) {\n                this$static.length_0 = N1_longLit;\n            } else {\n                this$static.length_0 = fromInt(tmp_length);\n            }\n        }\n        \n        this$static.chunker = $CodeInChunks(decoder, input, output, this$static.length_0);\n    }\n    \n    function $LZMAByteArrayDecompressor(this$static, data) {\n        this$static.output = $ByteArrayOutputStream({});\n        $init_0(this$static, $ByteArrayInputStream({}, data), this$static.output);\n        return this$static;\n    }\n    /** de */\n    \n    /** ds */\n    function $CopyBlock(this$static, distance, len) {\n        var pos = this$static._pos - distance - 1;\n        if (pos < 0) {\n            pos += this$static._windowSize;\n        }\n        for (; len != 0; --len) {\n            if (pos >= this$static._windowSize) {\n                pos = 0;\n            }\n            this$static._buffer[this$static._pos++] = this$static._buffer[pos++];\n            if (this$static._pos >= this$static._windowSize) {\n                $Flush_0(this$static);\n            }\n        }\n    }\n    \n    function $Create_5(this$static, windowSize) {\n        if (this$static._buffer == null || this$static._windowSize != windowSize) {\n            this$static._buffer = initDim(windowSize);\n        }\n        this$static._windowSize = windowSize;\n        this$static._pos = 0;\n        this$static._streamPos = 0;\n    }\n    \n    function $Flush_0(this$static) {\n        var size = this$static._pos - this$static._streamPos;\n        if (!size) {\n            return;\n        }\n        $write_0(this$static._stream, this$static._buffer, this$static._streamPos, size);\n        if (this$static._pos >= this$static._windowSize) {\n            this$static._pos = 0;\n        }\n        this$static._streamPos = this$static._pos;\n    }\n    \n    function $GetByte(this$static, distance) {\n        var pos = this$static._pos - distance - 1;\n        if (pos < 0) {\n            pos += this$static._windowSize;\n        }\n        return this$static._buffer[pos];\n    }\n    \n    function $PutByte(this$static, b) {\n        this$static._buffer[this$static._pos++] = b;\n        if (this$static._pos >= this$static._windowSize) {\n            $Flush_0(this$static);\n        }\n    }\n    \n    function $ReleaseStream(this$static) {\n        $Flush_0(this$static);\n        this$static._stream = null;\n    }\n    /** de */\n    \n    function GetLenToPosState(len) {\n        len -= 2;\n        if (len < 4) {\n            return len;\n        }\n        return 3;\n    }\n    \n    function StateUpdateChar(index) {\n        if (index < 4) {\n            return 0;\n        }\n        if (index < 10) {\n            return index - 3;\n        }\n        return index - 6;\n    }\n    \n    \n    /** ds */\n    function $Chunker(this$static, decoder) {\n        this$static.decoder = decoder;\n        this$static.encoder = null;\n        this$static.alive = 1;\n        return this$static;\n    }\n    /** de */\n    \n    function $processChunk(this$static) {\n        if (!this$static.alive) {\n            throw new Error(\"bad state\");\n        }\n        \n        if (this$static.encoder) {\n            throw new Error(\"No encoding\");\n            \n        } else {\n            /// co:throw new Error(\"No decoding\");\n            /** ds */\n            $processDecoderChunk(this$static);\n            /** de */\n        }\n        return this$static.alive;\n    }\n    \n    /** ds */\n    function $processDecoderChunk(this$static) {\n        var result = $CodeOneChunk(this$static.decoder);\n        if (result == -1) {\n            throw new Error(\"corrupted input\");\n        }\n        this$static.inBytesProcessed = N1_longLit;\n        this$static.outBytesProcessed = this$static.decoder.nowPos64;\n        if (result || compare(this$static.decoder.outSize, P0_longLit) >= 0 && compare(this$static.decoder.nowPos64, this$static.decoder.outSize) >= 0) {\n            $Flush_0(this$static.decoder.m_OutWindow);\n            $ReleaseStream(this$static.decoder.m_OutWindow);\n            this$static.decoder.m_RangeDecoder.Stream = null;\n            this$static.alive = 0;\n        }\n    }\n    /** de */\n    \n    \n    /** ds */\n    function $CodeInChunks(this$static, inStream, outStream, outSize) {\n        this$static.m_RangeDecoder.Stream = inStream;\n        $ReleaseStream(this$static.m_OutWindow);\n        this$static.m_OutWindow._stream = outStream;\n        $Init_1(this$static);\n        this$static.state = 0;\n        this$static.rep0 = 0;\n        this$static.rep1 = 0;\n        this$static.rep2 = 0;\n        this$static.rep3 = 0;\n        this$static.outSize = outSize;\n        this$static.nowPos64 = P0_longLit;\n        this$static.prevByte = 0;\n        return $Chunker({}, this$static);\n    }\n    \n    function $CodeOneChunk(this$static) {\n        var decoder2, distance, len, numDirectBits, posSlot, posState;\n        posState = lowBits_0(this$static.nowPos64) & this$static.m_PosStateMask;\n        if (!$DecodeBit(this$static.m_RangeDecoder, this$static.m_IsMatchDecoders, (this$static.state << 4) + posState)) {\n            decoder2 = $GetDecoder(this$static.m_LiteralDecoder, lowBits_0(this$static.nowPos64), this$static.prevByte);\n            if (this$static.state < 7) {\n                this$static.prevByte = $DecodeNormal(decoder2, this$static.m_RangeDecoder);\n            } else {\n                this$static.prevByte = $DecodeWithMatchByte(decoder2, this$static.m_RangeDecoder, $GetByte(this$static.m_OutWindow, this$static.rep0));\n            }\n            $PutByte(this$static.m_OutWindow, this$static.prevByte);\n            this$static.state = StateUpdateChar(this$static.state);\n            this$static.nowPos64 = add(this$static.nowPos64, P1_longLit);\n        } else {\n            if ($DecodeBit(this$static.m_RangeDecoder, this$static.m_IsRepDecoders, this$static.state)) {\n                len = 0;\n                if (!$DecodeBit(this$static.m_RangeDecoder, this$static.m_IsRepG0Decoders, this$static.state)) {\n                    if (!$DecodeBit(this$static.m_RangeDecoder, this$static.m_IsRep0LongDecoders, (this$static.state << 4) + posState)) {\n                        this$static.state = this$static.state < 7?9:11;\n                        len = 1;\n                    }\n                } else {\n                    if (!$DecodeBit(this$static.m_RangeDecoder, this$static.m_IsRepG1Decoders, this$static.state)) {\n                        distance = this$static.rep1;\n                    } else {\n                        if (!$DecodeBit(this$static.m_RangeDecoder, this$static.m_IsRepG2Decoders, this$static.state)) {\n                            distance = this$static.rep2;\n                        } else {\n                            distance = this$static.rep3;\n                            this$static.rep3 = this$static.rep2;\n                        }\n                        this$static.rep2 = this$static.rep1;\n                    }\n                    this$static.rep1 = this$static.rep0;\n                    this$static.rep0 = distance;\n                }\n                if (!len) {\n                    len = $Decode(this$static.m_RepLenDecoder, this$static.m_RangeDecoder, posState) + 2;\n                    this$static.state = this$static.state < 7?8:11;\n                }\n            } else {\n                this$static.rep3 = this$static.rep2;\n                this$static.rep2 = this$static.rep1;\n                this$static.rep1 = this$static.rep0;\n                len = 2 + $Decode(this$static.m_LenDecoder, this$static.m_RangeDecoder, posState);\n                this$static.state = this$static.state < 7?7:10;\n                posSlot = $Decode_0(this$static.m_PosSlotDecoder[GetLenToPosState(len)], this$static.m_RangeDecoder);\n                if (posSlot >= 4) {\n                    numDirectBits = (posSlot >> 1) - 1;\n                    this$static.rep0 = (2 | posSlot & 1) << numDirectBits;\n                    if (posSlot < 14) {\n                        this$static.rep0 += ReverseDecode(this$static.m_PosDecoders, this$static.rep0 - posSlot - 1, this$static.m_RangeDecoder, numDirectBits);\n                    } else {\n                        this$static.rep0 += $DecodeDirectBits(this$static.m_RangeDecoder, numDirectBits - 4) << 4;\n                        this$static.rep0 += $ReverseDecode(this$static.m_PosAlignDecoder, this$static.m_RangeDecoder);\n                        if (this$static.rep0 < 0) {\n                            if (this$static.rep0 == -1) {\n                                return 1;\n                            }\n                            return -1;\n                        }\n                    }\n                } else \n                    this$static.rep0 = posSlot;\n            }\n            if (compare(fromInt(this$static.rep0), this$static.nowPos64) >= 0 || this$static.rep0 >= this$static.m_DictionarySizeCheck) {\n                return -1;\n            }\n            $CopyBlock(this$static.m_OutWindow, this$static.rep0, len);\n            this$static.nowPos64 = add(this$static.nowPos64, fromInt(len));\n            this$static.prevByte = $GetByte(this$static.m_OutWindow, 0);\n        }\n        return 0;\n    }\n    \n    function $Decoder(this$static) {\n        this$static.m_OutWindow = {};\n        this$static.m_RangeDecoder = {};\n        this$static.m_IsMatchDecoders = initDim(192);\n        this$static.m_IsRepDecoders = initDim(12);\n        this$static.m_IsRepG0Decoders = initDim(12);\n        this$static.m_IsRepG1Decoders = initDim(12);\n        this$static.m_IsRepG2Decoders = initDim(12);\n        this$static.m_IsRep0LongDecoders = initDim(192);\n        this$static.m_PosSlotDecoder = initDim(4);\n        this$static.m_PosDecoders = initDim(114);\n        this$static.m_PosAlignDecoder = $BitTreeDecoder({}, 4);\n        this$static.m_LenDecoder = $Decoder$LenDecoder({});\n        this$static.m_RepLenDecoder = $Decoder$LenDecoder({});\n        this$static.m_LiteralDecoder = {};\n        for (var i = 0; i < 4; ++i) {\n            this$static.m_PosSlotDecoder[i] = $BitTreeDecoder({}, 6);\n        }\n        return this$static;\n    }\n    \n    function $Init_1(this$static) {\n        this$static.m_OutWindow._streamPos = 0;\n        this$static.m_OutWindow._pos = 0;\n        InitBitModels(this$static.m_IsMatchDecoders);\n        InitBitModels(this$static.m_IsRep0LongDecoders);\n        InitBitModels(this$static.m_IsRepDecoders);\n        InitBitModels(this$static.m_IsRepG0Decoders);\n        InitBitModels(this$static.m_IsRepG1Decoders);\n        InitBitModels(this$static.m_IsRepG2Decoders);\n        InitBitModels(this$static.m_PosDecoders);\n        $Init_0(this$static.m_LiteralDecoder);\n        for (var i = 0; i < 4; ++i) {\n            InitBitModels(this$static.m_PosSlotDecoder[i].Models);\n        }\n        $Init(this$static.m_LenDecoder);\n        $Init(this$static.m_RepLenDecoder);\n        InitBitModels(this$static.m_PosAlignDecoder.Models);\n        $Init_8(this$static.m_RangeDecoder);\n    }\n    \n    function $SetDecoderProperties(this$static, properties) {\n        var dictionarySize, i, lc, lp, pb, remainder, val;\n        if (properties.length < 5)\n            return 0;\n        val = properties[0] & 255;\n        lc = val % 9;\n        remainder = ~~(val / 9);\n        lp = remainder % 5;\n        pb = ~~(remainder / 5);\n        dictionarySize = 0;\n        for (i = 0; i < 4; ++i) {\n            dictionarySize += (properties[1 + i] & 255) << i * 8;\n        }\n        ///NOTE: If the input is bad, it might call for an insanely large dictionary size, which would crash the script.\n        if (dictionarySize > 99999999 || !$SetLcLpPb(this$static, lc, lp, pb)) {\n            return 0;\n        }\n        return $SetDictionarySize(this$static, dictionarySize);\n    }\n    \n    function $SetDictionarySize(this$static, dictionarySize) {\n        if (dictionarySize < 0) {\n            return 0;\n        }\n        if (this$static.m_DictionarySize != dictionarySize) {\n            this$static.m_DictionarySize = dictionarySize;\n            this$static.m_DictionarySizeCheck = Math.max(this$static.m_DictionarySize, 1);\n            $Create_5(this$static.m_OutWindow, Math.max(this$static.m_DictionarySizeCheck, 4096));\n        }\n        return 1;\n    }\n    \n    function $SetLcLpPb(this$static, lc, lp, pb) {\n        if (lc > 8 || lp > 4 || pb > 4) {\n            return 0;\n        }\n        $Create_0(this$static.m_LiteralDecoder, lp, lc);\n        var numPosStates = 1 << pb;\n        $Create(this$static.m_LenDecoder, numPosStates);\n        $Create(this$static.m_RepLenDecoder, numPosStates);\n        this$static.m_PosStateMask = numPosStates - 1;\n        return 1;\n    }\n    \n    function $Create(this$static, numPosStates) {\n        for (; this$static.m_NumPosStates < numPosStates; ++this$static.m_NumPosStates) {\n            this$static.m_LowCoder[this$static.m_NumPosStates] = $BitTreeDecoder({}, 3);\n            this$static.m_MidCoder[this$static.m_NumPosStates] = $BitTreeDecoder({}, 3);\n        }\n    }\n    \n    function $Decode(this$static, rangeDecoder, posState) {\n        if (!$DecodeBit(rangeDecoder, this$static.m_Choice, 0)) {\n            return $Decode_0(this$static.m_LowCoder[posState], rangeDecoder);\n        }\n        var symbol = 8;\n        if (!$DecodeBit(rangeDecoder, this$static.m_Choice, 1)) {\n            symbol += $Decode_0(this$static.m_MidCoder[posState], rangeDecoder);\n        } else {\n            symbol += 8 + $Decode_0(this$static.m_HighCoder, rangeDecoder);\n        }\n        return symbol;\n    }\n    \n    function $Decoder$LenDecoder(this$static) {\n        this$static.m_Choice = initDim(2);\n        this$static.m_LowCoder = initDim(16);\n        this$static.m_MidCoder = initDim(16);\n        this$static.m_HighCoder = $BitTreeDecoder({}, 8);\n        this$static.m_NumPosStates = 0;\n        return this$static;\n    }\n    \n    function $Init(this$static) {\n        InitBitModels(this$static.m_Choice);\n        for (var posState = 0; posState < this$static.m_NumPosStates; ++posState) {\n            InitBitModels(this$static.m_LowCoder[posState].Models);\n            InitBitModels(this$static.m_MidCoder[posState].Models);\n        }\n        InitBitModels(this$static.m_HighCoder.Models);\n    }\n    \n    \n    function $Create_0(this$static, numPosBits, numPrevBits) {\n        var i, numStates;\n        if (this$static.m_Coders != null && this$static.m_NumPrevBits == numPrevBits && this$static.m_NumPosBits == numPosBits)\n            return;\n        this$static.m_NumPosBits = numPosBits;\n        this$static.m_PosMask = (1 << numPosBits) - 1;\n        this$static.m_NumPrevBits = numPrevBits;\n        numStates = 1 << this$static.m_NumPrevBits + this$static.m_NumPosBits;\n        this$static.m_Coders = initDim(numStates);\n        for (i = 0; i < numStates; ++i)\n            this$static.m_Coders[i] = $Decoder$LiteralDecoder$Decoder2({});\n    }\n    \n    function $GetDecoder(this$static, pos, prevByte) {\n        return this$static.m_Coders[((pos & this$static.m_PosMask) << this$static.m_NumPrevBits) + ((prevByte & 255) >>> 8 - this$static.m_NumPrevBits)];\n    }\n    \n    function $Init_0(this$static) {\n        var i, numStates;\n        numStates = 1 << this$static.m_NumPrevBits + this$static.m_NumPosBits;\n        for (i = 0; i < numStates; ++i) {\n            InitBitModels(this$static.m_Coders[i].m_Decoders);\n        }\n    }\n    \n    \n    function $DecodeNormal(this$static, rangeDecoder) {\n        var symbol = 1;\n        do {\n            symbol = symbol << 1 | $DecodeBit(rangeDecoder, this$static.m_Decoders, symbol);\n        } while (symbol < 256);\n        return symbol << 24 >> 24;\n    }\n    \n    function $DecodeWithMatchByte(this$static, rangeDecoder, matchByte) {\n        var bit, matchBit, symbol = 1;\n        do {\n            matchBit = matchByte >> 7 & 1;\n            matchByte <<= 1;\n            bit = $DecodeBit(rangeDecoder, this$static.m_Decoders, (1 + matchBit << 8) + symbol);\n            symbol = symbol << 1 | bit;\n            if (matchBit != bit) {\n                while (symbol < 256) {\n                    symbol = symbol << 1 | $DecodeBit(rangeDecoder, this$static.m_Decoders, symbol);\n                }\n            break;\n            }\n        } while (symbol < 256);\n        return symbol << 24 >> 24;\n    }\n    \n    function $Decoder$LiteralDecoder$Decoder2(this$static) {\n        this$static.m_Decoders = initDim(768);\n        return this$static;\n    }\n    \n    /** de */\n    \n    /** ds */\n    function $BitTreeDecoder(this$static, numBitLevels) {\n        this$static.NumBitLevels = numBitLevels;\n        this$static.Models = initDim(1 << numBitLevels);\n        return this$static;\n    }\n    \n    function $Decode_0(this$static, rangeDecoder) {\n        var bitIndex, m = 1;\n        for (bitIndex = this$static.NumBitLevels; bitIndex != 0; --bitIndex) {\n            m = (m << 1) + $DecodeBit(rangeDecoder, this$static.Models, m);\n        }\n        return m - (1 << this$static.NumBitLevels);\n    }\n    \n    function $ReverseDecode(this$static, rangeDecoder) {\n        var bit, bitIndex, m = 1, symbol = 0;\n        for (bitIndex = 0; bitIndex < this$static.NumBitLevels; ++bitIndex) {\n            bit = $DecodeBit(rangeDecoder, this$static.Models, m);\n            m <<= 1;\n            m += bit;\n            symbol |= bit << bitIndex;\n        }\n        return symbol;\n    }\n    \n    function ReverseDecode(Models, startIndex, rangeDecoder, NumBitLevels) {\n        var bit, bitIndex, m = 1, symbol = 0;\n        for (bitIndex = 0; bitIndex < NumBitLevels; ++bitIndex) {\n            bit = $DecodeBit(rangeDecoder, Models, startIndex + m);\n            m <<= 1;\n            m += bit;\n            symbol |= bit << bitIndex;\n        }\n        return symbol;\n    }\n    /** de */\n    \n    /** ds */\n    function $DecodeBit(this$static, probs, index) {\n        var newBound, prob = probs[index];\n        newBound = (this$static.Range >>> 11) * prob;\n        if ((this$static.Code ^ -2147483648) < (newBound ^ -2147483648)) {\n            this$static.Range = newBound;\n            probs[index] = prob + (2048 - prob >>> 5) << 16 >> 16;\n            if (!(this$static.Range & -16777216)) {\n                this$static.Code = this$static.Code << 8 | $read(this$static.Stream);\n                this$static.Range <<= 8;\n            }\n            return 0;\n        } else {\n            this$static.Range -= newBound;\n            this$static.Code -= newBound;\n            probs[index] = prob - (prob >>> 5) << 16 >> 16;\n            if (!(this$static.Range & -16777216)) {\n                this$static.Code = this$static.Code << 8 | $read(this$static.Stream);\n                this$static.Range <<= 8;\n            }\n            return 1;\n        }\n    }\n    \n    function $DecodeDirectBits(this$static, numTotalBits) {\n        var i, t, result = 0;\n        for (i = numTotalBits; i != 0; --i) {\n            this$static.Range >>>= 1;\n            t = this$static.Code - this$static.Range >>> 31;\n            this$static.Code -= this$static.Range & t - 1;\n            result = result << 1 | 1 - t;\n            if (!(this$static.Range & -16777216)) {\n                this$static.Code = this$static.Code << 8 | $read(this$static.Stream);\n                this$static.Range <<= 8;\n            }\n        }\n        return result;\n    }\n    \n    function $Init_8(this$static) {\n        this$static.Code = 0;\n        this$static.Range = -1;\n        for (var i = 0; i < 5; ++i) {\n            this$static.Code = this$static.Code << 8 | $read(this$static.Stream);\n        }\n    }\n    /** de */\n    \n    function InitBitModels(probs) {\n        for (var i = probs.length - 1; i >= 0; --i) {\n            probs[i] = 1024;\n        }\n    }\n    \n    /** ds */\n    function decode(utf) {\n        var i = 0, j = 0, x, y, z, l = utf.length, buf = [], charCodes = [];\n        for (; i < l; ++i, ++j) {\n            x = utf[i] & 255;\n            if (!(x & 128)) {\n                if (!x) {\n                    /// It appears that this is binary data, so it cannot be converted to a string, so just send it back.\n                    return utf;\n                }\n                charCodes[j] = x;\n            } else if ((x & 224) == 192) {\n                if (i + 1 >= l) {\n                    /// It appears that this is binary data, so it cannot be converted to a string, so just send it back.\n                    return utf;\n                }\n                y = utf[++i] & 255;\n                if ((y & 192) != 128) {\n                    /// It appears that this is binary data, so it cannot be converted to a string, so just send it back.\n                    return utf;\n                }\n                charCodes[j] = ((x & 31) << 6) | (y & 63);\n            } else if ((x & 240) == 224) {\n                if (i + 2 >= l) {\n                    /// It appears that this is binary data, so it cannot be converted to a string, so just send it back.\n                    return utf;\n                }\n                y = utf[++i] & 255;\n                if ((y & 192) != 128) {\n                    /// It appears that this is binary data, so it cannot be converted to a string, so just send it back.\n                    return utf;\n                }\n                z = utf[++i] & 255;\n                if ((z & 192) != 128) {\n                    /// It appears that this is binary data, so it cannot be converted to a string, so just send it back.\n                    return utf;\n                }\n                charCodes[j] = ((x & 15) << 12) | ((y & 63) << 6) | (z & 63);\n            } else {\n                /// It appears that this is binary data, so it cannot be converted to a string, so just send it back.\n                return utf;\n            }\n            if (j == 16383) {\n                buf.push(String.fromCharCode.apply(String, charCodes));\n                j = -1;\n            }\n        }\n        if (j > 0) {\n            charCodes.length = j;\n            buf.push(String.fromCharCode.apply(String, charCodes));\n        }\n        return buf.join(\"\");\n    }\n    /** de */\n    \n    \n    function toDouble(a) {\n        return a[1] + a[0];\n    }\n    \n    \n    /** ds */\n    function decompress(byte_arr, on_finish, on_progress) {\n        var this$static = {},\n            percent,\n            cbn, /// A callback number should be supplied instead of on_finish() if we are using Web Workers.\n            has_progress,\n            len,\n            sync = typeof on_finish == \"undefined\" && typeof on_progress == \"undefined\";\n\n        if (typeof on_finish != \"function\") {\n            cbn = on_finish;\n            on_finish = on_progress = 0;\n        }\n        \n        on_progress = on_progress || function(percent) {\n            if (typeof cbn == \"undefined\")\n                return;\n            \n            return update_progress(has_progress ? percent : -1, cbn);\n        };\n        \n        on_finish = on_finish || function(res, err) {\n            if (typeof cbn == \"undefined\")\n                return;\n            \n            return postMessage({\n                action: action_decompress,\n                cbn: cbn,\n                result: res,\n                error: err\n            });\n        };\n\n        if (sync) {\n            this$static.d = $LZMAByteArrayDecompressor({}, byte_arr);\n            while ($processChunk(this$static.d.chunker));\n            return decode($toByteArray(this$static.d.output));\n        }\n        \n        try {\n            this$static.d = $LZMAByteArrayDecompressor({}, byte_arr);\n            \n            len = toDouble(this$static.d.length_0);\n            \n            ///NOTE: If the data was created via a stream, it will not have a length value, and therefore we can't calculate the progress.\n            has_progress = len > -1;\n            \n            on_progress(0);\n        } catch (err) {\n            return on_finish(null, err);\n        }\n        \n        function do_action() {\n            try {\n                var res, i = 0, start = (new Date()).getTime();\n                while ($processChunk(this$static.d.chunker)) {\n                    if (++i % 1000 == 0 && (new Date()).getTime() - start > 200) {\n                        if (has_progress) {\n                            percent = toDouble(this$static.d.chunker.decoder.nowPos64) / len;\n                            /// If about 200 miliseconds have passed, update the progress.\n                            on_progress(percent);\n                        }\n                        \n                        ///NOTE: This allows other code to run, like the browser to update.\n                        wait(do_action, 0);\n                        return 0;\n                    }\n                }\n                \n                on_progress(1);\n                \n                res = decode($toByteArray(this$static.d.output));\n                \n                /// delay so we don’t catch errors from the on_finish handler\n                wait(on_finish.bind(null, res), 0);\n            } catch (err) {\n                on_finish(null, err);\n            }\n        }\n        \n        ///NOTE: We need to wait to make sure it is always async.\n        wait(do_action, 0);\n    }\n    /** de */\n    \n    \n    /// If we're in a Web Worker, create the onmessage() communication channel.\n    ///NOTE: This seems to be the most reliable way to detect this.\n    if (typeof onmessage != \"undefined\" && (typeof window == \"undefined\" || typeof window.document == \"undefined\")) {\n        (function () {\n            /* jshint -W020 */\n            /// Create the global onmessage function.\n            onmessage = function (e) {\n                if (e && e.data) {\n                    \n                    /// co:if (e.data.action == action_compress) {\n                    /// co:    LZMA.compress(e.data.data, e.data.mode, e.data.cbn);\n                    /// co:}\n                    if (e.data.action == action_decompress) {\n                        LZMA.decompress(e.data.data, e.data.cbn);\n                    }\n                }\n            };\n        }());\n    }\n        \n    return {\n        \n        /// co:compress:   compress\n        decompress: decompress\n    };\n}());\n\n/// This is used by browsers that do not support web workers (and possibly Node.js).\nthis.LZMA = this.LZMA_WORKER = LZMA;\n","\nclass XRAvatar {\n    constructor (data) {\n        this.data = data;\n    }\n    async init (Assembler) {\n        const gltfPath = this.data.modelURL;\n        const assembler = new Assembler(gltfPath);\n        this.model = await assembler.assemble(this.data);\n    }\n}\n\nexport {\n    XRAvatar\n}","import * as Comlink from \"comlink/dist/esm/comlink.mjs\";\nimport \"lzma/src/lzma-d.js\";\nimport {\n    XRAvatar\n} from './xravatar.js';\n\nconst dialogStyle = \"position: absolute; top: 5vh; left: 5vw; width: 90vw; height: 90vh; border: 2px solid #0A78FC; box-shadow: 10px 10px 10px 0em rgba(0,0,0,0.5);\";\n\nclass AvatarLoader {\n  constructor ( url ) {\n    this.apiURL = url;\n    this.iframe = null;\n    this.comlink = null;\n  }\n  \n  static async decompress (array) {\n    return new Promise(resolve => window.LZMA.decompress(array, resolve));\n  }\n\n  async getComlink () {\n    return this.comlink || await (async () => {\n      const comlinkIframe = this.iframe = document.createElement('iframe');\n      comlinkIframe.setAttribute('sandbox', \"allow-scripts allow-same-origin\");\n      comlinkIframe.setAttribute('referrerpolicy', \"strict-origin\");\n      comlinkIframe.src = this.apiURL;\n      comlinkIframe.setAttribute('style',dialogStyle)\n      comlinkIframe.style.visibility = 'hidden';\n      document.body.appendChild(comlinkIframe);\n      this.comlink = await new Promise((resolve, reject) => {\n        comlinkIframe.onload = async function iframeLoaded() {\n          const api = Comlink.wrap(Comlink.windowEndpoint(comlinkIframe.contentWindow));\n          resolve(api);\n        }\n        comlinkIframe.onerror = function iframeError(e) {\n          reject(Error('Iframe failed to load: ' + e.message));\n        }\n      });\n      return this.comlink;\n    })()\n  }\n\n  async attemptLoad () {\n    const api = await this.getComlink();\n    console.log(await api.testVal);\n\n    if (await api.canDoLocalStorage()) {\n      const hasAvatar = await api.hasAvatar();\n      console.log({hasAvatar});\n      const hasPermission = await api.hasPermission();\n      console.log({hasPermission});\n  \n      // Everything is all good go ahead and get the avatar\n      if (hasAvatar && hasPermission) return {result: true};\n      \n      // Something went wrong either no avatar or no permission\n      // Show the iframe\n      this.iframe.style.visibility = '';\n  \n      try {\n        await api.getPermission();\n        console.log('Permission Granted!!');\n        this.iframe.style.visibility = 'hidden';\n        return {result: true};\n      } catch (e) {\n        this.iframe.style.visibility = 'hidden';\n        return {\n          result: false,\n          message: e.message\n        };\n      }\n\n    } else {\n      // Oh dear the user agent is blocking third party storage\n      //No worries we will just have to navigate there instead to get the avatar as a URL encoded string\n      const locationBits = new URL(location.href);\n      location.assign(this.apiURL + '?redirect=' + encodeURIComponent(locationBits.origin + locationBits.pathname));\n      return {\n        result: false,\n        message: \"Redirecting to get avatar\"\n      }\n    }\n  }\n\n  static async loadAvatarFromBase64(base64) {\n    const string = atob(base64);\n    const array = [...string].map(c => c.charCodeAt(0) - 128);\n    const json = await AvatarLoader.decompress(array);\n    return new XRAvatar(JSON.parse(json));\n  }\n\n  async getAvatarAsJSON () {\n    const api = await this.getComlink();\n    return new XRAvatar(await api.getAvatarAsJSON());\n  }\n\n  cleanUp () {\n    this.iframe.parentNode.removeChild(this.iframe);\n    this.iframe = null;\n    this.comlink = null;\n  }\n}\n\nexport {\n  AvatarLoader\n}","export default /* glsl */`\n#include <common>\nuniform sampler2D xravatar_palette;\nuniform float xravatar_offsetx;\nuniform float xravatar_offsety;\nuniform float xravatar_palettetexelsize;\n`","/*\nTweak the map to use the map as an index rather than as an image\n\nr in image is expressed between 0-1\ninstead of 0-255\n\nIndex = floor(255 * r/16) ~= floor(r * 16);\nBrightness = r%16;\n\nUse this to get the colour in HSL format from the array of 16 colours in the uniforms\n\nput into hsl2rgb to get final colour.\n*/\n\nexport default /* glsl */`\n#ifdef USE_MAP\n    float index;\n    float bshift;\n    vec4 indexColor;\n    vec4 texelColor;\n    vec4 outColor = vec4(0.0);\n\n    float pixelSize = 1.0/2048.0;\n\n    // Center the point on the middle of the texel\n    vec2 offset = mod(vUv, pixelSize) - (0.5 * pixelSize);\n    vec2 vUv1 = vUv - offset;\n\n    // Normalise offset\n    vec2 dir = offset/abs(offset);\n    offset*=(dir/pixelSize) * 1.33333;\n\n    // Interpolate when the sampled point sits between two texels\n    float totalMix = 0.0;\n    ${[\n        ['vUv1', '1.0'], // Sample center texel\n        ['vUv1 + vec2(pixelSize * dir.x, 0.0)', 'offset.x'], // Sample one texel right/left\n        ['vUv1 + vec2(0.0, pixelSize * dir.y)', 'offset.y'], // Sample one texel up/down\n    ].map(([uvOffset, mix]) => `\n        totalMix += ${mix};\n        texelColor = texture2D( map,  ${uvOffset} );\n        index = floor(texelColor.r * 16.0) / 16.0 + xravatar_palettetexelsize * 0.5; // Between 0 and 1\n        bshift = smoothstep(0.0, 0.0625, mod(texelColor.r, 0.0625)); // Between 0 and 1.0\n        indexColor = texture2D( xravatar_palette, vec2(index, 1.0 - bshift) );\n        outColor += indexColor * ${mix};\n    `\n    ).join('\\n\\n')}\n\n    diffuseColor *= mapTexelToLinear(outColor/totalMix);\n#endif\n`","const apiVersion = \"1.0.0\";\nconst localModelPath = 'assets/bits.glb';\n\nconst defaultValues = {\n    \"xravatar_index\": 0,\n    \"xravatar_minCount\": 0,\n    \"xravatar_maxCount\": 1,\n    \"xravatar_minR\": 0,\n    \"xravatar_maxR\": 0.7,\n    \"xravatar_minScale\": 0.7,\n    \"xravatar_maxScale\": 1.3,\n    \"xravatar_canMirror\": 1,\n    \"xravatar_canMove\": 0.0,\n    \"xravatar_defaultMirror\": 0\n}\n\nconst settingKeys = {\n    xravatar_scale: Number,\n    xravatar_flip: Boolean,\n    xravatar_mirror: Boolean,\n    xravatar_positionRadius: Number,\n    xravatar_positionPhi: Number,\n    xravatar_positionTheta: Number,\n};\n\nfunction getGLTFURL() {\n\n    // Turn local path into absolue path\n    const a = document.createElement('A');\n    a.href = localModelPath;\n    return a.href;\n}\n\nfunction createEmptyState() {\n    return {\n        apiVersion,\n        modelURL: getGLTFURL()\n    }\n}\n\n// This is what is saved back out\nfunction createEmptySettings(item) {\n    const out = {\n        name: item.name,\n        settings: {\n            xravatar_scale: item.userData.xravatar_minScale + (item.userData.xravatar_maxScale - item.userData.xravatar_minScale)/2,\n            xravatar_mirror: item.userData.xravatar_defaultMirror,\n        }\n    }\n\n    if (item.morphTargets) {\n        item.morphTargets.forEach(key => {\n            out.settings['xravatar_morph_' + key] = 0;\n        });\n    }\n\n    if (item.userData.xravatar_canMove) {\n        out.settings.xravatar_positionRadius = item.startPosition.radius;\n        out.settings.xravatar_positionPhi = item.startPosition.phi;\n        out.settings.xravatar_positionTheta = item.startPosition.theta;\n        console.log(item.startPosition);\n    }\n\n    return out;\n}\n\nexport {\n    defaultValues,\n    createEmptySettings,\n    settingKeys,\n    createEmptyState,\n    getGLTFURL\n}","const c = document.createElement('canvas');\nc.style.width = c.style.height = 'auto';\nc.style.transform = 'scale(4) translate(50%,50%)';\n// document.body.appendChild(c);\nconst ctx = c.getContext(\"2d\")\n\nconst palettes = [];\nconst singlePaletteSize = 16;\nlet sideLength = 0;\n\nlet texture;\nfunction getCanvasTexture(CanvasTexture) {\n    texture = texture || new CanvasTexture(c);\n    return texture\n}\n\nfunction coordinate(index) {\n    const sideCapacity = sideLength / singlePaletteSize;\n    return [\n        (index % sideCapacity) * singlePaletteSize,\n        Math.floor(index / sideCapacity) * singlePaletteSize\n    ]\n}\n\nconst buffer = new Uint8ClampedArray(256 * 4);\nfunction draw(ctx, palette, offsetX, offsetY) {\n    for (let i=0; i<256;i++) {\n        const x=i%singlePaletteSize;\n        const y=Math.floor(i/singlePaletteSize);\n        const index=x;\n        const brightnessshift = 2.0*y/16;\n        buffer[i*4 + 0] = palette[index*3 + 0] * brightnessshift;\n        buffer[i*4 + 1] = palette[index*3 + 1] * brightnessshift;\n        buffer[i*4 + 2] = palette[index*3 + 2] * brightnessshift;\n        buffer[i*4 + 3] = 255;\n    }\n    const id = new ImageData(buffer, singlePaletteSize, singlePaletteSize);\n    ctx.putImageData(id,offsetX,offsetY);\n}\n\nasync function updatePaletteCanvas(uniforms, p, redraw  = false) {\n    if (palettes.indexOf(p) === -1) {\n        palettes.push(p);\n        redraw = true;\n    }\n    const n = palettes.length;\n    const newSideLength = Math.ceil(Math.sqrt(n)) * singlePaletteSize;\n    if (newSideLength > sideLength) {\n        sideLength = newSideLength;\n        redraw = true;\n    }\n    if (redraw) {\n        c.width = c.height = sideLength;\n        palettes.forEach((palette, i) => {\n            const [x,y] = coordinate(i);\n            draw(ctx, palette, x, y);\n            if (uniforms.xravatar_offsetx) {\n                uniforms.xravatar_offsetx.value = x;\n                uniforms.xravatar_offsety.value = y;\n                uniforms.xravatar_palettetexelsize.value = 1/sideLength;\n            }\n            if (texture) texture.needsUpdate = true;\n        });\n    } else {\n        const i = palettes.indexOf(p);\n        const palette = palettes[i];\n        const [x,y] = coordinate(i);\n        draw(ctx, palette, x, y);\n        if (uniforms.xravatar_offsetx) {\n            uniforms.xravatar_offsetx.value = x;\n            uniforms.xravatar_offsety.value = y;\n            uniforms.xravatar_palettetexelsize.value = 1/sideLength;\n        }\n        if (texture) texture.needsUpdate = true;\n    }\n}\n\nexport {\n    updatePaletteCanvas,\n    getCanvasTexture\n}","/* global THREE */\n\n/*\nThis is the starting point for loading the avatar\n\nTHIS IS COMPILED, naked imports are okay.\n\n1. Load iframe small, detect if we need to get avatar\n2. (If permission required) Show iframe to get permission\n3. Get the Avatar string\n*/\n\n// <!-- This is an iframe which treats api.html as if it were a 3rd party -->\n// <!-- This is for testing the 3rd party client integration -->\n// <iframe sandbox=\"allow-scripts\" src=\"api.html\" style=\"position: absolute; top: 5vh; left: 5vw; width: 90vw; height: 90vh; border: 2px solid var(--blue);\"></iframe>\n\nimport {\n  AvatarLoader\n} from './xravatarLoader.js';\nimport common from './glsl/common.glsl.js';\nimport mapFragment from './glsl/map_fragment.glsl.js';\nimport { defaultValues } from './schema.js';\nimport {\n  getCanvasTexture, updatePaletteCanvas\n} from './canvasPaletteMap.js'\n\nfunction sphericalPolarToCartesian(r, p, t) {\n  return [\n    r * Math.sin(t) * Math.cos(p),\n    r * Math.cos(t),\n    r * Math.sin(t) * Math.sin(p),\n  ];\n}\n\nasync function checkURL() {\n  const xravatarSearchParam = new URLSearchParams(new URL(location.href).search).get('xravatar');\n  if (xravatarSearchParam) {\n    const avatar = await AvatarLoader.loadAvatarFromBase64(xravatarSearchParam.replace(/ /gi, '+'));\n    return avatar;\n  }\n}\n\nasync function getAvatar(url) {\n  const avatarLoader = new AvatarLoader(url);\n\n  // Creates an iframe to get permission or to prompt the user to make an avatar \n  let test = await avatarLoader.attemptLoad();\n\n  if (test.result === false) {\n\n    // removes the iframe\n    avatarLoader.cleanUp();\n    throw Error(test.message);\n  } else if (test.result === true) {\n\n    // Uses the same iframe to load the avatar\n    const avatar = await avatarLoader.getAvatarAsJSON();\n\n    // removes the iframe\n    avatarLoader.cleanUp();\n    return avatar;\n  }\n}\n\nconst assemblerCache = new Map();\nclass Assembler {\n  constructor(gltfPath) {\n\n    // There is one Assembler per gltfPath\n    if (assemblerCache.has(gltfPath)) {\n      return assemblerCache.get(gltfPath);\n    }\n    const loader = new THREE.GLTFLoader();\n    this.categoriesPromise = new Promise(resolve => loader.load(gltfPath, resolve))\n      .then(function ({ scene: gltfScene }) {\n        const categories = {};\n        const toBeRemoved = [];\n        let material;\n        let morphMaterial;\n\n        gltfScene.children[0].traverse(o => {\n          if (o.type === 'Group') return;\n\n          // Inherit data from parent (or the default values)\n          const dataToInherit = o.parent === gltfScene ? defaultValues : o.parent.userData;\n          for (const key of Object.keys(defaultValues)) {\n            o.userData[key] = (o.userData[key] === undefined ? dataToInherit[key] : o.userData[key]);\n          }\n\n          if (!material && o.material && !o.morphTargetDictionary) {\n            material = o.material;\n          }\n          if (!morphMaterial && o.material && o.morphTargetDictionary) {\n            morphMaterial = o.material;\n            morphMaterial.morphTargets = true;\n          }\n          if (o.material) {\n            if (!o.morphTargetDictionary) o.material = material;\n            else o.material = morphMaterial;\n          }\n\n          if (!o.geometry) {\n            const parent = o.parent === gltfScene ? undefined : o.parent;\n            const target = new THREE.Group();\n            o.add(target);\n\n            // If it has no geometry it's a category\n            categories[o.name] = {\n              name: o.name,\n              userData: o.userData,\n              model: o,\n              parent,\n              children: {},\n              target\n            }\n          } else {\n\n            o.castShadow = true;\n            toBeRemoved.push(o);\n\n            // If it has data add it to category;\n            const data = categories[o.parent.name].children[o.name] = ({\n              name: o.name,\n              model: o,\n              userData: o.userData,\n              morphTargets: o.morphTargetDictionary && Object.keys(o.morphTargetDictionary)\n            });\n            if (data.userData.xravatar_canMove) {\n\n              const radius = o.position.length();\n              data.startPosition = {\n                radius,\n                phi: Math.atan2(o.position.z, o.position.x),\n                theta: Math.acos(o.position.y / radius)\n              }\n              o.position.x = 0;\n              o.position.y = 0;\n              o.position.z = 0;\n            }\n          }\n        });\n\n        /* Tweak the material to enable the map to behave as a HSL indexed colour map rather than as an rgb map */\n        const oldOnBeforeCompile = material.onBeforeCompile;\n        let uniforms = {\n            xravatar_palette: {\n                value: getCanvasTexture(THREE.CanvasTexture)\n            },\n            xravatar_offsetx: {\n                value: 0\n            },\n            xravatar_offsety: {\n                value: 0\n            },\n            xravatar_palettetexelsize: {\n                value: 1/16\n            }\n        };\n        morphMaterial.onBeforeCompile = material.onBeforeCompile = function (shader) {\n            oldOnBeforeCompile();\n            Object.assign(shader.uniforms, uniforms);\n            Object.assign(uniforms, shader.uniforms);\n            shader.fragmentShader = shader.fragmentShader.replace('#include <map_fragment>', mapFragment)\n            shader.fragmentShader = shader.fragmentShader.replace('#include <common>', common);\n        };\n        material.map.minFilter = material.map.magFilter = THREE.NearestFilter;\n\n        toBeRemoved.forEach(o => o.parent.remove(o));\n        // sort the gltf into it's bits\n        return {\n          xravatar_root: gltfScene.children[0],\n          categories,\n          uniforms\n        };\n      });\n  }\n\n  async assemble(state) {\n    const gltfParsed = await this.categoriesPromise;\n    const categories = gltfParsed.categories;\n    const xravatar_root = gltfParsed.xravatar_root;\n    const categoryNames = Object.keys(categories);\n    const uniforms = gltfParsed.uniforms;\n\n    updatePaletteCanvas(uniforms, state.palette);\n\n    for (const categoryName of categoryNames) {\n      const item = state[categoryName];\n      const category = categories[categoryName];\n      const parent = category.target;\n      parent.children.splice(0);\n      if (!item) continue;\n      if (item.children) {\n        item.children\n          .forEach(item => {\n            const model = addItem(categories, parent, categoryName, item);\n            applySettings(model, item.settings);\n            applyMorph(model, item.settings);\n\n            if (item.settings.xravatar_mirror) {\n              const mirrorItem = {};\n              Object.assign(mirrorItem, item);\n              mirrorItem.settings = {};\n              Object.assign(mirrorItem.settings, item.settings);\n              mirrorItem.settings.xravatar_flip = !mirrorItem.settings.xravatar_flip;\n\n              const model2 = addItem(categories, parent, categoryName, mirrorItem);\n              applySettings(model2, mirrorItem.settings);\n              applyMorph(model2, mirrorItem.settings);\n            }\n          });\n      } else if (item.settings.xravatar_mirror) {\n        parent.parent.matrix.identity();\n\n        const mirrorItem = {};\n        Object.assign(mirrorItem, item);\n        mirrorItem.settings = {};\n        Object.assign(mirrorItem.settings, item.settings);\n        mirrorItem.settings.xravatar_flip = !mirrorItem.settings.xravatar_flip;\n\n        const model = addItem(categories, parent, categoryName, item);\n        applySettings(model, item.settings);\n        applyMorph(model, item.settings);\n\n        const model2 = addItem(categories, parent, categoryName, mirrorItem);\n        applySettings(model2, mirrorItem.settings);\n        applyMorph(model2, mirrorItem.settings);\n\n      } else {\n        const model = addItem(categories, parent, categoryName, item);\n        applySettings(parent.parent, item.settings);\n        applyMorph(model, item.settings);\n      }\n    }\n    return xravatar_root.clone(true);\n  }\n}\n\n\nconst currentlyUsedObjects = new Map();\nfunction addItem(categories, parent, categoryName, item) {\n  const cache = currentlyUsedObjects;\n  let modelToAdd = cache.get(item);\n  const category = categories[categoryName];\n\n  // Fail gracefully on unmatched things from the state\n  if (!category) {\n    console.warn(`\"${categoryName}\", from state, not found in GLTF file.`);\n    return\n  }\n\n  if (!modelToAdd) {\n    const child = category.children[item.name];\n    if (!child) {\n      console.warn(`Child \"${item.name}\" of ${categoryName}\", from state, not found in GLTF file.`);\n      return\n    }\n    modelToAdd = child.model.clone();\n    cache.set(item, modelToAdd);\n  }\n  parent.add(modelToAdd);\n\n  return modelToAdd;\n}\n\nfunction applyMorph(model, settings) {\n  // Apply morph targets\n  Object.keys(settings)\n    .filter(key => key.indexOf('xravatar_morph_') === 0)\n    .forEach(key => {\n      const morphName = key.slice(15);\n      const index = model.morphTargetDictionary[morphName];\n      model.morphTargetInfluences[index] = settings[key];\n    });\n}\n\nlet tempMatrix;\nfunction applySettings(model, settings) {\n  tempMatrix = tempMatrix || new THREE.Matrix4();\n  model.matrixAutoUpdate = false;\n  model.matrix.identity();\n  const scale = settings.xravatar_scale || 1.0;\n  if (settings.xravatar_flip) {\n    model.matrix.multiply(tempMatrix.makeScale(\n      1.0,\n      1.0,\n      -1.0\n    ));\n  }\n  const oldPosition = model.oldPosition || (model.oldPosition = model.position.clone());\n  if (settings.xravatar_positionRadius) {\n    model.matrix.multiply(tempMatrix.makeTranslation(\n      ...sphericalPolarToCartesian(\n        settings.xravatar_positionRadius,\n        settings.xravatar_positionPhi,\n        settings.xravatar_positionTheta\n      )\n    ));\n  } else {\n    model.matrix.multiply(tempMatrix.makeTranslation(\n      oldPosition.x, oldPosition.y, oldPosition.z\n    ));\n  }\n  model.matrix.multiply(tempMatrix.makeScale(\n    scale,\n    scale,\n    scale\n  ));\n}\n\nexport {\n  AvatarLoader,\n  checkURL,\n  getAvatar,\n  Assembler\n}"],"names":["proxyMarker","Symbol","createEndpoint","releaseProxy","throwSet","WeakSet","transferHandlers","Map","canHandle","obj","[object Object]","port1","port2","MessageChannel","expose","ep","self","addEventListener","callback","ev","data","id","type","path","Object","assign","argumentList","map","fromWireValue","returnValue","parent","slice","reduce","prop","rawValue","value","apply","proxy","transfers","transferCache","set","transfer","undefined","e","add","Promise","resolve","catch","then","wireValue","transferables","toWireValue","postMessage","removeEventListener","closeEndPoint","start","deserialize","port","wrap","has","isError","Error","serialized","message","stack","endpoint","constructor","name","isMessagePort","close","target","createProxy","isProxyReleased","Proxy","_target","throwIfProxyReleased","requestResponseMessage","p","toString","length","r","bind","_thisArg","rawArgumentList","last","processArguments","isReleased","processed","v","arr","Array","prototype","concat","WeakMap","handler","serializedValue","serialize","get","msg","fill","Math","floor","random","Number","MAX_SAFE_INTEGER","join","l","LZMA","action_decompress","action_progress","wait","setImmediate","setTimeout","__4294967296","N1_longLit","P0_longLit","P1_longLit","initDim","len","a","b","create","compare","nega","negb","sub","valueLow","valueHigh","diffHigh","diffLow","fromInt","lowBits_0","max","min","$read","this$static","pos","count","buf","$toByteArray","$init_0","input","output","decoder","i","tmp_length","hex_length","properties","dictionarySize","lc","lp","pb","remainder","val","numPosBits","numPrevBits","numStates","m_Coders","m_NumPrevBits","m_NumPosBits","m_PosMask","$Decoder$LiteralDecoder$Decoder2","$Create_0","m_LiteralDecoder","numPosStates","$Create","m_LenDecoder","m_RepLenDecoder","m_PosStateMask","$SetLcLpPb","m_DictionarySize","m_DictionarySizeCheck","windowSize","_buffer","_windowSize","_pos","_streamPos","$Create_5","m_OutWindow","$SetDictionarySize","$SetDecoderProperties","m_RangeDecoder","m_IsMatchDecoders","m_IsRepDecoders","m_IsRepG0Decoders","m_IsRepG1Decoders","m_IsRepG2Decoders","m_IsRep0LongDecoders","m_PosSlotDecoder","m_PosDecoders","m_PosAlignDecoder","$BitTreeDecoder","$Decoder$LenDecoder","$Decoder","test","length_0","parseInt","chunker","inStream","outStream","outSize","Stream","$ReleaseStream","_stream","InitBitModels","m_Decoders","$Init_0","Models","$Init","Code","Range","$Init_8","$Init_1","state","rep0","rep1","rep2","rep3","nowPos64","prevByte","encoder","alive","$Chunker","$CodeInChunks","$LZMAByteArrayDecompressor","$ByteArrayOutputStream","$ByteArrayInputStream","$Flush_0","size","off","src","srcOfs","dest","destOfs","arraycopy","$write_0","$GetByte","distance","$processChunk","result","decoder2","numDirectBits","posSlot","posState","$DecodeBit","$Decode","$Decode_0","GetLenToPosState","startIndex","rangeDecoder","NumBitLevels","bit","bitIndex","m","symbol","ReverseDecode","numTotalBits","t","$DecodeDirectBits","$ReverseDecode","$CopyBlock","$GetDecoder","$DecodeNormal","matchByte","matchBit","$DecodeWithMatchByte","$PutByte","index","$CodeOneChunk","inBytesProcessed","outBytesProcessed","$processDecoderChunk","m_NumPosStates","m_LowCoder","m_MidCoder","m_Choice","m_HighCoder","numBitLevels","probs","newBound","prob","decode","utf","x","y","z","j","charCodes","push","String","fromCharCode","toDouble","onmessage","window","document","action","decompress","cbn","byte_arr","on_finish","on_progress","percent","has_progress","sync","update_progress","res","err","error","d","do_action","Date","getTime","this","LZMA_WORKER","XRAvatar","Assembler","assembler","modelURL","model","assemble","dialogStyle","AvatarLoader","url","apiURL","iframe","comlink","array","comlinkIframe","createElement","setAttribute","style","visibility","body","appendChild","reject","onload","async","api","Comlink.wrap","w","context","targetOrigin","Comlink.windowEndpoint","contentWindow","onerror","getComlink","console","log","testVal","canDoLocalStorage","locationBits","URL","location","href","encodeURIComponent","origin","pathname","hasAvatar","hasPermission","getPermission","base64","atob","c","charCodeAt","json","JSON","parse","getAvatarAsJSON","parentNode","removeChild","uvOffset","mix","defaultValues","xravatar_index","xravatar_minCount","xravatar_maxCount","xravatar_minR","xravatar_maxR","xravatar_minScale","xravatar_maxScale","xravatar_canMirror","xravatar_canMove","xravatar_defaultMirror","width","height","transform","ctx","getContext","palettes","singlePaletteSize","texture","sideLength","coordinate","sideCapacity","buffer","Uint8ClampedArray","draw","palette","offsetX","offsetY","brightnessshift","ImageData","putImageData","checkURL","xravatarSearchParam","URLSearchParams","search","loadAvatarFromBase64","replace","getAvatar","avatarLoader","attemptLoad","cleanUp","avatar","assemblerCache","gltfPath","loader","THREE","GLTFLoader","categoriesPromise","load","scene","gltfScene","categories","toBeRemoved","material","morphMaterial","children","traverse","o","dataToInherit","userData","key","keys","morphTargetDictionary","morphTargets","geometry","castShadow","radius","position","startPosition","phi","atan2","theta","acos","Group","oldOnBeforeCompile","onBeforeCompile","uniforms","xravatar_palette","CanvasTexture","xravatar_offsetx","xravatar_offsety","xravatar_palettetexelsize","shader","fragmentShader","mapFragment","common","minFilter","magFilter","NearestFilter","forEach","remove","xravatar_root","gltfParsed","categoryNames","redraw","indexOf","n","newSideLength","ceil","sqrt","needsUpdate","updatePaletteCanvas","categoryName","item","splice","addItem","applySettings","settings","applyMorph","xravatar_mirror","mirrorItem","xravatar_flip","model2","matrix","identity","clone","currentlyUsedObjects","cache","modelToAdd","category","child","warn","filter","morphName","morphTargetInfluences","tempMatrix","Matrix4","matrixAutoUpdate","scale","xravatar_scale","multiply","makeScale","oldPosition","xravatar_positionRadius","makeTranslation","xravatar_positionPhi","xravatar_positionTheta","sin","cos"],"mappings":"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"}