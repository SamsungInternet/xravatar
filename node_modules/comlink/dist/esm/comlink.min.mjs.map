{"version":3,"file":"comlink.min.mjs","sources":["../../src/comlink.ts"],"sourcesContent":["/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  EventSource,\n  Message,\n  MessageType,\n  PostMessageWithOrigin,\n  WireValue,\n  WireValueType\n} from \"./protocol\";\nexport { Endpoint };\n\nexport const proxyMarker = Symbol(\"Comlink.proxy\");\nexport const createEndpoint = Symbol(\"Comlink.endpoint\");\nexport const releaseProxy = Symbol(\"Comlink.releaseProxy\");\nconst throwSet = new WeakSet();\n\n// prettier-ignore\ntype Promisify<T> =\n  T extends { [proxyMarker]: boolean }\n    ? Promise<Remote<T>>\n    : T extends (...args: infer R1) => infer R2\n        ? (...args: R1) => Promisify<R2>\n        : Promise<T>;\n\n// prettier-ignore\nexport type Remote<T> =\n  (\n    T extends (...args: infer R1) => infer R2\n      ? (...args: R1) => Promisify<R2>\n      : unknown\n  ) &\n  (\n    T extends { new (...args: infer R1): infer R2 }\n      ? { new (...args: R1): Promise<Remote<R2>> }\n      : unknown\n  ) &\n  (\n    T extends Object\n      ? { [K in keyof T]: Remote<T[K]> }\n      : unknown\n  ) &\n  (\n    T extends string\n      ? Promise<string>\n      : unknown\n  ) &\n  (\n    T extends number\n      ? Promise<number>\n      : unknown\n  ) &\n  (\n    T extends boolean\n      ? Promise<boolean>\n      : unknown\n  ) & {\n    [createEndpoint]: MessagePort;\n    [releaseProxy]: () => void;\n  };\n\ndeclare var x: Remote<number>;\n\ndeclare var y: PromiseLike<number>;\n\nexport interface TransferHandler {\n  canHandle(obj: any): boolean;\n  serialize(obj: any): [any, Transferable[]];\n  deserialize(obj: any): any;\n}\n\nexport const transferHandlers = new Map<string, TransferHandler>([\n  [\n    \"proxy\",\n    {\n      canHandle: obj => obj && obj[proxyMarker],\n      serialize(obj) {\n        const { port1, port2 } = new MessageChannel();\n        expose(obj, port1);\n        return [port2, [port2]];\n      },\n      deserialize: (port: MessagePort) => {\n        port.start();\n        return wrap(port);\n      }\n    }\n  ],\n  [\n    \"throw\",\n    {\n      canHandle: obj => throwSet.has(obj),\n      serialize(obj) {\n        const isError = obj instanceof Error;\n        let serialized = obj;\n        if (isError) {\n          serialized = {\n            isError,\n            message: obj.message,\n            stack: obj.stack\n          };\n        }\n        return [serialized, []];\n      },\n      deserialize(obj) {\n        if ((obj as any).isError) {\n          throw Object.assign(new Error(), obj);\n        }\n        throw obj;\n      }\n    }\n  ]\n]);\n\nexport function expose(obj: any, ep: Endpoint = self as any) {\n  ep.addEventListener(\"message\", function callback(ev: MessageEvent) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    const { id, type, path } = {\n      path: [] as string[],\n      ...(ev.data as Message)\n    };\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n      const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n      switch (type) {\n        case MessageType.GET:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case MessageType.SET:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case MessageType.APPLY:\n          {\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case MessageType.CONSTRUCT:\n          {\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case MessageType.ENDPOINT:\n          {\n            const { port1, port2 } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case MessageType.RELEASE:\n          {\n            returnValue = undefined;\n          }\n          break;\n      }\n    } catch (e) {\n      returnValue = e;\n      throwSet.add(e);\n    }\n    Promise.resolve(returnValue)\n      .catch(e => {\n        throwSet.add(e);\n        return e;\n      })\n      .then(returnValue => {\n        const [wireValue, transferables] = toWireValue(returnValue);\n        ep.postMessage({ ...wireValue, id }, transferables);\n        if (type === MessageType.RELEASE) {\n          // detach and deactive after sending release response above.\n          ep.removeEventListener(\"message\", callback as any);\n          closeEndPoint(ep);\n        }\n      });\n  } as any);\n  if (ep.start) {\n    ep.start();\n  }\n}\n\nfunction isMessagePort(endpoint: Endpoint): endpoint is MessagePort {\n  return endpoint.constructor.name === \"MessagePort\";\n}\n\nfunction closeEndPoint(endpoint: Endpoint) {\n  if (isMessagePort(endpoint)) endpoint.close();\n}\n\nexport function wrap<T>(ep: Endpoint, target?: any): Remote<T> {\n  return createProxy<T>(ep, [], target) as any;\n}\n\nfunction throwIfProxyReleased(isReleased: boolean) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\n\nfunction createProxy<T>(\n  ep: Endpoint,\n  path: (string | number | symbol)[] = [],\n  target: object = function() {}\n): Remote<T> {\n  let isProxyReleased = false;\n  const proxy = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          return requestResponseMessage(ep, {\n            type: MessageType.RELEASE,\n            path: path.map(p => p.toString())\n          }).then(() => {\n            closeEndPoint(ep);\n            isProxyReleased = true;\n          });\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return { then: () => proxy };\n        }\n        const r = requestResponseMessage(ep, {\n          type: MessageType.GET,\n          path: path.map(p => p.toString())\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n      // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.SET,\n          path: [...path, prop].map(p => p.toString()),\n          value\n        },\n        transferables\n      ).then(fromWireValue) as any;\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if ((last as any) === createEndpoint) {\n        return requestResponseMessage(ep, {\n          type: MessageType.ENDPOINT\n        }).then(fromWireValue);\n      }\n      // We just pretend that `bind()` didn’t happen.\n      if (last === \"bind\") {\n        return createProxy(ep, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.APPLY,\n          path: path.map(p => p.toString()),\n          argumentList\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.CONSTRUCT,\n          path: path.map(p => p.toString()),\n          argumentList\n        },\n        transferables\n      ).then(fromWireValue);\n    }\n  });\n  return proxy as any;\n}\n\nfunction myFlat<T>(arr: (T | T[])[]): T[] {\n  return Array.prototype.concat.apply([], arr);\n}\n\nfunction processArguments(argumentList: any[]): [WireValue[], Transferable[]] {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map(v => v[0]), myFlat(processed.map(v => v[1]))];\n}\n\nconst transferCache = new WeakMap<any, Transferable[]>();\nexport function transfer(obj: any, transfers: Transferable[]) {\n  transferCache.set(obj, transfers);\n  return obj;\n}\n\nexport function proxy<T>(obj: T): T & { [proxyMarker]: true } {\n  return Object.assign(obj, { [proxyMarker]: true }) as any;\n}\n\nexport function windowEndpoint(\n  w: PostMessageWithOrigin,\n  context: EventSource = self,\n  targetOrigin = \"*\"\n): Endpoint {\n  return {\n    postMessage: (msg: any, transferables: Transferable[]) =>\n      w.postMessage(msg, targetOrigin, transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context)\n  };\n}\n\nfunction toWireValue(value: any): [WireValue, Transferable[]] {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [\n        {\n          type: WireValueType.HANDLER,\n          name,\n          value: serializedValue\n        },\n        transferables\n      ];\n    }\n  }\n  return [\n    {\n      type: WireValueType.RAW,\n      value\n    },\n    transferCache.get(value) || []\n  ];\n}\n\nfunction fromWireValue(value: WireValue): any {\n  switch (value.type) {\n    case WireValueType.HANDLER:\n      return transferHandlers.get(value.name)!.deserialize(value.value);\n    case WireValueType.RAW:\n      return value.value;\n  }\n}\n\nfunction requestResponseMessage(\n  ep: Endpoint,\n  msg: Message,\n  transfers?: Transferable[]\n): Promise<WireValue> {\n  return new Promise(resolve => {\n    const id = generateUUID();\n    ep.addEventListener(\"message\", function l(ev: MessageEvent) {\n      if (!ev.data || !ev.data.id || ev.data.id !== id) {\n        return;\n      }\n      ep.removeEventListener(\"message\", l as any);\n      resolve(ev.data);\n    } as any);\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage({ id, ...msg }, transfers);\n  });\n}\n\nfunction generateUUID(): string {\n  return new Array(4)\n    .fill(0)\n    .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n    .join(\"-\");\n}\n"],"names":["proxyMarker","Symbol","createEndpoint","releaseProxy","throwSet","WeakSet","transferHandlers","Map","canHandle","obj","[object Object]","port1","port2","MessageChannel","expose","deserialize","port","start","wrap","has","isError","Error","serialized","message","stack","Object","assign","ep","self","addEventListener","callback","ev","data","id","type","path","argumentList","map","fromWireValue","returnValue","parent","slice","reduce","prop","rawValue","value","apply","proxy","transfer","undefined","e","add","Promise","resolve","catch","then","wireValue","transferables","toWireValue","postMessage","removeEventListener","closeEndPoint","endpoint","constructor","name","isMessagePort","close","target","createProxy","isProxyReleased","Proxy","_target","throwIfProxyReleased","requestResponseMessage","p","toString","length","r","bind","_thisArg","rawArgumentList","last","processArguments","isReleased","processed","v","arr","Array","prototype","concat","transferCache","WeakMap","transfers","set","windowEndpoint","w","context","targetOrigin","msg","handler","serializedValue","serialize","get","fill","Math","floor","random","Number","MAX_SAFE_INTEGER","join","l"],"mappings":"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"}